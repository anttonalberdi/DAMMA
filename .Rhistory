compounds_table_df2 <- merge(compounds_table_df,unique(pathway_table[,c("Compound","Function")]),by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
compounds_table_df2$trial_time <- paste(compounds_table_df2$trial,compounds_table_df2$sampling_time,sep="_")
compounds_table_df2$trial_time <- as.factor(compounds_table_df2$trial_time)
compounds_table_df2$trial_time <- factor(compounds_table_df2$trial_time, levels=c("CA_7","CB_7","CA_21","CB_21","CA_35","CB_35","CC_7","CC_21","CC_35"))
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
compounds_table_df2$MCI <- log(compounds_table_df2$MCI)
compounds_table_df2$MCI[which(!is.finite(compounds_table_df2$MCI))] <- NA
max=max(compounds_table_df2$MCI)
min=min(compounds_table_df2$MCI)
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(min,max), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
MCI_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
head(MCI_table)
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table)
head(MCI_table_compounds)
MCI_table_corrected <- damma_correction(distilled_table,genome_completeness=genome_quality[,c(1:2)])
MCI_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
MCI_table_corrected <- damma_correction(MCI_table,genome_completeness=genome_quality[,c(1:2)])
MCI_table_functions <- damma_functions(MCI_table_compounds,pathway_table)
head(MCI_table_functions)
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(MCI_table_compounds_bin)
colnames(compounds_table_df) <- c("MAGs","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=MAGs, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#Prepare input table
compounds_table_df <- melt(MCI_table_compounds)
colnames(compounds_table_df) <- c("MAGs","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=MAGs, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
MCI_expression_table <- damma_expression(gene_expression,gene_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
MCI_expression_table2 <- sweep_matrix_list(MCI_expression_table)
MCI_expression_table2_compounds <- lapply(MCI_expression_table2,function(x) damma_compounds(x,pathway_table))
head(MCI_expression_table2)
MCI_expression_table2_compounds <- lapply(MCI_expression_table2,function(x) damma_compounds(x,pathway_table))
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(MCI_expression_table2_compounds)
colnames(compounds_table_df) <- c("MAGs","Compounds","Expression","Sample")
compounds_table_df$Expression <- log(compounds_table_df$Expression)
compounds_table_df$Expression[compounds_table_df$Expression == "-Inf"] <- NA
compounds_table_df$Expression[compounds_table_df$Expression < 0] <- NA
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=MAGs, y=Compounds, fill=Expression, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(colours=brewer.pal(7, "YlGnBu"),na.value="#f4f4f4")+
facet_grid(Function ~ Sample, scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
gene_annotations <- read.table("data/source/gene_annotations.tsv",header=TRUE,sep="\t")
library(gtools)
gene_annotations <- gene_annotations[mixedorder(gene_annotations$genome),]
gene_expression <- read.table("data/source/gene_expression.tsv",header=TRUE,sep="\t",row.names=1)
genome_counts <- read.table("data/source/genome_counts.tsv",header=TRUE,sep="\t",row.names=1)
genome_quality <- read.table("data/source/genome_quality.tsv",header=TRUE,sep="\t")
pathway_table_FD1 <- read.table("data/source/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/source/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/source/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/source/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/source/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/source/DAMMA_db6.tsv",header=TRUE,sep="\t")
pathway_table_FD7 <- read.table("data/source/DAMMA_db7.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
pathway_table_FD7,
file="data/damma_data.RData")
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
MCI_table <- damma(gene_annotations,pathway_table_FD7,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table)
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table_FD7)
head(MCI_table)
head(pathway_table_FD7)
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table_FD7)
rownames(MCI_table)
rownames(pathway_table_FD7)
head(pathway_table_FD7)
head(pathway_table)
gene_annotations <- read.table("data/source/gene_annotations.tsv",header=TRUE,sep="\t")
library(gtools)
gene_annotations <- gene_annotations[mixedorder(gene_annotations$genome),]
gene_expression <- read.table("data/source/gene_expression.tsv",header=TRUE,sep="\t",row.names=1)
genome_counts <- read.table("data/source/genome_counts.tsv",header=TRUE,sep="\t",row.names=1)
genome_quality <- read.table("data/source/genome_quality.tsv",header=TRUE,sep="\t")
pathway_table_FD1 <- read.table("data/source/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/source/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/source/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/source/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/source/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/source/DAMMA_db6.tsv",header=TRUE,sep="\t")
pathway_table_FD7 <- read.table("data/source/DAMMA_db7.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
pathway_table_FD7,
file="data/damma_data.RData")
load_all('/Users/anttonalberdi/github/DAMMA')
MCI_table <- damma(gene_annotations,pathway_table_FD7,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table_FD7)
head(pathway_table_FD7)
gene_annotations <- read.table("data/source/gene_annotations.tsv",header=TRUE,sep="\t")
library(gtools)
gene_annotations <- gene_annotations[mixedorder(gene_annotations$genome),]
gene_expression <- read.table("data/source/gene_expression.tsv",header=TRUE,sep="\t",row.names=1)
genome_counts <- read.table("data/source/genome_counts.tsv",header=TRUE,sep="\t",row.names=1)
genome_quality <- read.table("data/source/genome_quality.tsv",header=TRUE,sep="\t")
pathway_table_FD1 <- read.table("data/source/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/source/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/source/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/source/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/source/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/source/DAMMA_db6.tsv",header=TRUE,sep="\t")
pathway_table_FD7 <- read.table("data/source/DAMMA_db7.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
pathway_table_FD7,
file="data/damma_data.RData")
load_all('/Users/anttonalberdi/github/DAMMA')
MCI_table <- damma(gene_annotations,pathway_table_FD7,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table_FD7)
head(MCI_table)
head(pathway_table_FD7)
pathway_table<-pathway_table_FD7
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))) %>%
column_to_rownames('Compound'))
compounds_table <- t(as.data.frame(t(MCI_table))
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code')
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code')
)
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound))
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))))
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))))
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))) %>%
column_to_rownames('Compound'))
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound)))
head(compounds_table)
head(compounds_table)
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code'))
head(compounds_table)
head(t(as.data.frame(t(MCI_table)))
)
load_all('/Users/anttonalberdi/github/DAMMA')
MCI_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
head(MCI_table)
pathway_table=pathway_table_FD6
MCI_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
head(MCI_table)
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table)
head(t(as.data.frame(t(MCI_table)))
)
head(t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code'))
)
head(t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))))
)
head(t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))) %>%
column_to_rownames('Compound')))
MCI_table <- damma(gene_annotations,pathway_table_FD7,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
head(MCI_table)
pathway_table <- pathway_table_FD7
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))) %>%
column_to_rownames('Compound'))
colnames(pathway_table_FD6)
colnames(pathway_table_FD7)
as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound)))
pathway_table <- pathway_table_FD7
as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))) %>%
column_to_rownames('Compound')
as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound)))
as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code')
as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE)))
as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound)))
as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))) %>%
column_to_rownames('Compound')
cd <- as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound)))
cd
cd$Compound
gene_annotations <- read.table("data/source/gene_annotations.tsv",header=TRUE,sep="\t")
library(gtools)
gene_annotations <- gene_annotations[mixedorder(gene_annotations$genome),]
gene_expression <- read.table("data/source/gene_expression.tsv",header=TRUE,sep="\t",row.names=1)
genome_counts <- read.table("data/source/genome_counts.tsv",header=TRUE,sep="\t",row.names=1)
genome_quality <- read.table("data/source/genome_quality.tsv",header=TRUE,sep="\t")
pathway_table_FD1 <- read.table("data/source/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/source/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/source/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/source/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/source/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/source/DAMMA_db6.tsv",header=TRUE,sep="\t")
pathway_table_FD7 <- read.table("data/source/DAMMA_db7.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
pathway_table_FD7,
file="data/damma_data.RData")
load_all('/Users/anttonalberdi/github/DAMMA')
tail(pathway_table_FD7)
pathway_table=pathway_table_FD7
MCI_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table)
pathway_table
cd <- as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))) %>%
column_to_rownames('Compound')
cd <- as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound)))
cd$Compound
cd <- as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound)
cd
cd$Code
gene_annotations <- read.table("data/source/gene_annotations.tsv",header=TRUE,sep="\t")
library(gtools)
gene_annotations <- gene_annotations[mixedorder(gene_annotations$genome),]
gene_expression <- read.table("data/source/gene_expression.tsv",header=TRUE,sep="\t",row.names=1)
genome_counts <- read.table("data/source/genome_counts.tsv",header=TRUE,sep="\t",row.names=1)
genome_quality <- read.table("data/source/genome_quality.tsv",header=TRUE,sep="\t")
pathway_table_FD1 <- read.table("data/source/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/source/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/source/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/source/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/source/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/source/DAMMA_db6.tsv",header=TRUE,sep="\t")
pathway_table_FD7 <- read.table("data/source/DAMMA_db7.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
pathway_table_FD7,
file="data/damma_data.RData")
load_all('/Users/anttonalberdi/github/DAMMA')
pathway_table=pathway_table_FD7
MCI_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table)
cd <- as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code')
cd$Code
gene_annotations <- read.table("data/source/gene_annotations.tsv",header=TRUE,sep="\t")
library(gtools)
gene_annotations <- gene_annotations[mixedorder(gene_annotations$genome),]
gene_expression <- read.table("data/source/gene_expression.tsv",header=TRUE,sep="\t",row.names=1)
genome_counts <- read.table("data/source/genome_counts.tsv",header=TRUE,sep="\t",row.names=1)
genome_quality <- read.table("data/source/genome_quality.tsv",header=TRUE,sep="\t")
pathway_table_FD1 <- read.table("data/source/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/source/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/source/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/source/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/source/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/source/DAMMA_db6.tsv",header=TRUE,sep="\t")
pathway_table_FD7 <- read.table("data/source/DAMMA_db7.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
pathway_table_FD7,
file="data/damma_data.RData")
load_all('/Users/anttonalberdi/github/DAMMA')
pathway_table=pathway_table_FD7
MCI_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table)
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(MCI_table_compounds)
colnames(compounds_table_df) <- c("MAGs","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=MAGs, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#Prepare input table
compounds_table_df <- melt(MCI_table_compounds)
colnames(compounds_table_df) <- c("MAGs","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
#Plot heatmap
ggplot(compounds_table_df2, aes(x=MAGs, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
MCI_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
setwd("/Users/anttonalberdi/github/functional_diversity/")
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
library(data.table)
gene_annotations <- fread("data/annotations1.tsv")
MCI_table <- damma(gene_annotations,pathway_table_FD7,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(MCI_table,"MCI_table1.Rdata")
save(MCI_table,file="MCI_table1.Rdata")
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table)
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(MCI_table_compounds)
colnames(compounds_table_df) <- c("MAGs","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
#Plot heatmap
ggplot(compounds_table_df2, aes(x=MAGs, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
head(MCI_table)
ggplot(compounds_table_df2, aes(x=MAGs, y=Compounds, fill=MCI, group=Function))+
geom_tile()+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
setwd("/Users/anttonalberdi/github/functional_diversity/")
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
library(data.table)
gene_annotations <- fread("data/annotations1.tsv")
MCI_table$D020606
MCI_table[,"D020606"]
