aggregated_table <- cbind(aggregated_table,distilled_table_agg)
head(aggregated_table)
codes <- functions[functions$Function == "Secondary bile acid production","Code"]
compounds <- functions[functions$Function == "Secondary bile acid degradation","Compound"]
compounds
codes
functions[functions$Function == "Secondary bile acid production",]
#Create empty table
aggregated_table <- c()
#Aggregate dietary carbohydrates
codes <- functions[functions$Function == "Dietary carbohydrate degradation","Code"]
compounds <- functions[functions$Function == "Dietary carbohydrate degradation","Compound"]
distilled_table_sub <- distilled_table[,codes]
colnames(distilled_table_sub) <- compounds
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate dietary lipids
codes <- functions[functions$Function == "Dietary lipid degradation","Code"]
compounds <- functions[functions$Function == "Dietary lipid degradation","Compound"]
distilled_table_sub <- distilled_table[,codes]
colnames(distilled_table_sub) <- compounds
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate dietary proteins
codes <- functions[functions$Function == "Protein degradation","Code"]
enzyme_groups <- functions[functions$Function == "Protein degradation","Compound"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_sub <- rowMeans(distilled_table_sub)
distilled_table_sub <- t(t(distilled_table_sub))
colnames(distilled_table_sub) <- "Peptides"
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate mucins
codes <- functions[functions$Function == "Mucin degradation","Code"]
compounds <- functions[functions$Function == "Mucin degradation","Compound"]
distilled_table_sub <- distilled_table[,codes]
colnames(distilled_table_sub) <- compounds
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate SCFAs
codes <- functions[functions$Function == "SCFA production","Code"]
compounds <- functions[functions$Function == "SCFA production","Compound"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_mer <- merge(t(distilled_table_sub),functions[functions$Function == "SCFA production",c("Code","Compound")],by.x="row.names",by.y="Code")
distilled_table_agg <- aggregate(subset(distilled_table_mer, select = -c(Row.names,Compound) ),by=list(distilled_table_mer$Compound),FUN=max)
rownames(distilled_table_agg) <- distilled_table_agg[,1]
distilled_table_agg <- t(distilled_table_agg[,-1])
aggregated_table <- cbind(aggregated_table,distilled_table_agg)
#Aggregate organic anions
codes <- functions[functions$Function == "Organic anion production","Code"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_mer <- merge(t(distilled_table_sub),functions[functions$Function == "Organic anion production",c("Code","Compound")],by.x="row.names",by.y="Code")
distilled_table_agg <- aggregate(subset(distilled_table_mer, select = -c(Row.names,Compound) ),by=list(distilled_table_mer$Compound),FUN=max)
rownames(distilled_table_agg) <- distilled_table_agg[,1]
distilled_table_agg <- t(distilled_table_agg[,-1])
aggregated_table <- cbind(aggregated_table,distilled_table_agg)
#Aggregate secondary bile acids
codes <- functions[functions$Function == "Secondary bile acid production","Code"]
compounds <- functions[functions$Function == "Secondary bile acid production","Compound"]
distilled_table_sub <- distilled_table[,codes]
colnames(distilled_table_sub) <- compounds
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate amino acids
codes <- functions[functions$Function == "Amino acid production","Code"]
compounds <- functions[functions$Function == "Amino acid production","Compound"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_mer <- merge(t(distilled_table_sub),functions[functions$Function == "Amino acid production",c("Code","Compound")],by.x="row.names",by.y="Code")
distilled_table_agg <- aggregate(subset(distilled_table_mer, select = -c(Row.names,Compound) ),by=list(distilled_table_mer$Compound),FUN=max)
rownames(distilled_table_agg) <- distilled_table_agg[,1]
distilled_table_agg <- t(distilled_table_agg[,-1])
aggregated_table <- cbind(aggregated_table,distilled_table_agg)
#Aggregate amino acid derivatives
codes <- functions[functions$Function == "Amino acid derivative production","Code"]
compounds <- functions[functions$Function == "Amino acid derivative production","Compound"]
distilled_table_sub <- distilled_table[,codes]
colnames(distilled_table_sub) <- compounds
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate vitamins
codes <- functions[functions$Function == "Vitamin production","Code"]
compounds <- functions[functions$Function == "Vitamin production","Compound"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_mer <- merge(t(distilled_table_sub),functions[functions$Function == "Vitamin production",c("Code","Compound")],by.x="row.names",by.y="Code")
distilled_table_agg <- aggregate(subset(distilled_table_mer, select = -c(Row.names,Compound) ),by=list(distilled_table_mer$Compound),FUN=max)
rownames(distilled_table_agg) <- distilled_table_agg[,1]
distilled_table_agg <- t(distilled_table_agg[,-1])
aggregated_table <- cbind(aggregated_table,distilled_table_agg)
colnames(aggregated_table)
roxygen2::roxygenise()
roxygen2::roxygenise()
detach_package(DAMMA)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
load("distilled_caecum.RData")
annotations_file="/Users/anttonalberdi/annotations.tsv"
unique(annotations_file$fasta)
unique(annotations_file[,2])
annotations <- fread(annotations_file)
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
save(annotations,file="data/annotations_example.RData")
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
functions_file="/Users/anttonalberdi/github/DAMMA/data/DAMMA_functions_20220619.tsv"
functions <- read.table(functions_file,header=TRUE,row.names=1,sep="\t")
damma_data <- functions
damma_functions <- damma_data
usethis::use_data(damma_functions)
roxygen2::roxygenise()
roxygen2::roxygenise()
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
dama_annotations <- annotations
usethis::use_data(dama_annotations)
roxygen2::roxygenise()
roxygen2::roxygenise()
annotations_example <- annotations
save(functions,annotations_example,file="data/damma_data.RData")
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
detach_package(DAMMA)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
load(damma_data)
data(damma_data)
annotations
force(annotations_example)
force(functions)
head(functions)
dim(functions)
data(damma_data)
head(annotations_example)
#Load functions
data(damma_data)
head(functions)
distilled_table <- damma(annotations_example,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
compounds_table <- aggregate_compounds(distilled_table)
compounds_table <- aggregate_compounds(distilled_table,functions)
head(functions)
functions_table <- read.table(functions_file,header=TRUE,sep="\t")
functions_file="/Users/anttonalberdi/github/DAMMA/data/DAMMA_functions_20220620.tsv"
functions_table <- read.table(functions_file,header=TRUE,sep="\t")
head(functions_table)
save(functions_table,annotations_example,file="data/damma_data.RData")
detach_package(DAMMA)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
#Load example annotations
data(damma_data)
head(annotations_example)
#Load functions
data(damma_data)
head(functions_table)
#Run distillation
distilled_table <- damma(annotations_example,functions_table,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
compounds_table <- aggregate_compounds(distilled_table,functions_table)
head(compounds_table)
compounds_table
compounds_table_df <- melt(compounds_table)
head(compounds_table_df)
colnames(compounds_table_df) <- c("MAGs","Functions","Fullness")
distilled_df2 <- merge(distilled_df,functions_table,by.x="Functions",by.y="row.names")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Functions",by.y="row.names")
head(compounds_table_df2)
head(compounds_table_df)
head(functions_table)
head(compounds_table_df)
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df <- melt(compounds_table)
colnames(compounds_table_df) <- c("MAGs","Compounds","Fullness")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
head(compounds_table_df2)
ggplot(compounds_table_df, aes(x=Compounds, y=MAGs, fill=Fullness, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn( colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(colours=brewer.pal(7, "YlGnBu"))+
facet_grid(~ Function, scales = "free", space = "free")
theme_grey(base_size=8)
library(ggplot2)
library(RColorBrewer)
ggplot(compounds_table_df, aes(x=Compounds, y=MAGs, fill=Fullness, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn( colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(colours=brewer.pal(7, "YlGnBu"))+
facet_grid(~ Function, scales = "free", space = "free")
theme_grey(base_size=8)
head(compounds_table_df)
ggplot(compounds_table_df2, aes(x=Compounds, y=MAGs, fill=Fullness, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn( colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(colours=brewer.pal(7, "YlGnBu"))+
facet_grid(~ Function, scales = "free", space = "free")
theme_grey(base_size=8)
ggplot(compounds_table_df2, aes(x=MAGs, y=Compounds, fill=Fullness, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn( colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
annotations <- fread(annotations_file)
annotations_file="/Users/anttonalberdi/annotations.tsv"
annotations <- fread(annotations_file)
unique(annotations[,2])
unique(annotations[,2])[1:15]
c(unique(annotations[,2])[1:15])
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60") | (fasta == "bin_m1.mtb106") | (fasta == "bin_m1.mtb2") | (fasta == "bin_m1.mxb107_sub") | (fasta == "bin_m1.vmb35") | (fasta == "bin_m1.vmb46") | (fasta == " bin_m10.cct0"),]
annotations_example <-
annotations
save(functions_table,annotations_example,file="data/damma_data.RData")
detach_package(DAMMA)
remove.packages("DAMMA")
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
detach_package(DAMMA)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
detach_package(DAMMA)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
#Load DAMMA support data
data(damma_data)
#Visualise example annotations
head(annotations_example)
#Visualise functions table
head(functions_table)
distilled_table <- damma(annotations_example,functions_table,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
library(DAMMA)
distilled_table <- damma(annotations_example,functions_table,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
distilled_table_compounds <- damma_compounds(distilled_table,functions_table)
distilled_table_compounds_bin <- damma_bin(distilled_table_compounds,threshold=0.9)
distilled_table_functions <- damma_functions(distilled_table_compounds,functions_table,normalise=FALSE)
roxygen2::roxygenise()
roxygen2::roxygenise()
detach_package(DAMMA)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
#Load DAMMA library
library(DAMMA)
#Load DAMMA support data
data(damma_data)
#Visualise example annotations
head(annotations_example)
#Visualise functions table
head(functions_table)
distilled_table <- damma(annotations_example,functions_table,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
distilled_table_compounds <- damma_compounds(distilled_table,functions_table)
distilled_table_compounds_bin <- damma_bin(distilled_table_compounds,threshold=0.9)
completeness_table <- cbind(genome=c("bin_m1.cct123","bin_m1.mtb106","bin_m1.mtb2","bin_m1.mxb107_sub","bin_m1.vmb35","bin_m1.vmb46","bin_m9.vmb60"),completeness=c(100,98,85.8,94.5,97,100,70))
distilled_table_compounds_bin <- damma_bin(distilled_table_compounds,threshold=0.9,completeness=completeness_table)
completeness[,2]
completeness_table <- cbind(genome=c("bin_m1.cct123","bin_m1.mtb106","bin_m1.mtb2","bin_m1.mxb107_sub","bin_m1.vmb35","bin_m1.vmb46","bin_m9.vmb60"),completeness=c(100,98,85.8,94.5,97,100,70))
completeness_table[,2]
as.numeric(completeness_table[,2])
class(completeness_table)
library(DAMMA)
#Load DAMMA library
library(DAMMA)
#Load DAMMA support data
data(damma_data)
#Visualise example annotations
head(annotations_example)
#Visualise functions table
head(functions_table)
magcol=2
keggcol=9
eccol=c(10,19)
pepcol=12
annotations2 <- annotations_example[,c(magcol,keggcol,eccol,pepcol), with=FALSE]
colnames(annotations2) <- c("MAGs",paste0("K",c(1:length(keggcol))),paste0("E",c(1:length(eccol))),paste0("P",c(1:length(pepcol))))
#K00000
kegg <- str_extract(annotations_MAG$K1, "K[0-9]+")
kegg <- unique(kegg[!is.na(kegg)])
#[EC:0.0.0.0]
EC <- unlist(str_match_all(annotations_MAG$E1, "(?<=\\[EC:).+?(?=\\])"))
EC <- unique(unlist(strsplit(EC, " ")))
EC <- EC[!grepl("-", EC, fixed = TRUE)]
#(EC 0.0.0.0)
EC2 <- unlist(str_match_all(annotations_MAG$E2, "(?<=\\(EC ).+?(?=\\))"))
EC2 <- unique(unlist(strsplit(EC2, " ")))
EC2 <- EC2[!grepl("-", EC2, fixed = TRUE)]
#Peptidases
pep <- unique(annotations_MAG$P1)
pep <- pep[pep != ""]
#Concatenate all annotations
present <- unique(c(kegg,EC,EC2,pep))
library(DAMMA)
library(stringr)
data(damma_data)
annotations_example
magcol=2
keggcol=9
eccol=c(10,19)
pepcol=12
annotations2 <- annotations_example[,c(magcol,keggcol,eccol,pepcol), with=FALSE]
colnames(annotations2) <- c("MAGs",paste0("K",c(1:length(keggcol))),paste0("E",c(1:length(eccol))),paste0("P",c(1:length(pepcol))))
#K00000
kegg <- str_extract(annotations_MAG$K1, "K[0-9]+")
kegg <- unique(kegg[!is.na(kegg)])
#[EC:0.0.0.0]
EC <- unlist(str_match_all(annotations_MAG$E1, "(?<=\\[EC:).+?(?=\\])"))
EC <- unique(unlist(strsplit(EC, " ")))
EC <- EC[!grepl("-", EC, fixed = TRUE)]
#(EC 0.0.0.0)
EC2 <- unlist(str_match_all(annotations_MAG$E2, "(?<=\\(EC ).+?(?=\\))"))
EC2 <- unique(unlist(strsplit(EC2, " ")))
EC2 <- EC2[!grepl("-", EC2, fixed = TRUE)]
#Peptidases
pep <- unique(annotations_MAG$P1)
pep <- pep[pep != ""]
#Concatenate all annotations
present <- unique(c(kegg,EC,EC2,pep))
magcol=2
keggcol=9
eccol=c(10,19)
pepcol=12
annotations2 <- annotations_example[,c(magcol,keggcol,eccol,pepcol), with=FALSE]
colnames(annotations2) <- c("MAGs",paste0("K",c(1:length(keggcol))),paste0("E",c(1:length(eccol))),paste0("P",c(1:length(pepcol))))
#K00000
kegg <- str_extract(annotations2$K1, "K[0-9]+")
kegg <- unique(kegg[!is.na(kegg)])
#[EC:0.0.0.0]
EC <- unlist(str_match_all(annotations2$E1, "(?<=\\[EC:).+?(?=\\])"))
EC <- unique(unlist(strsplit(EC, " ")))
EC <- EC[!grepl("-", EC, fixed = TRUE)]
#(EC 0.0.0.0)
EC2 <- unlist(str_match_all(annotations2$E2, "(?<=\\(EC ).+?(?=\\))"))
EC2 <- unique(unlist(strsplit(EC2, " ")))
EC2 <- EC2[!grepl("-", EC2, fixed = TRUE)]
#Peptidases
pep <- unique(annotations2$P1)
pep <- pep[pep != ""]
#Concatenate all annotations
present <- unique(c(kegg,EC,EC2,pep))
present
compute_fullness(definition,present)
definition="3.2.1.85 5.3.1.26 2.7.1.144 4.1.2.40"
compute_fullness(definition,present)
definition="2.7.1.211 3.2.1.48 2.7.1.4"
compute_fullness(definition,present)
definition="1.4.1.2 1.1.1.399 2.8.3.12 4.2.1.167 7.2.4.5 1.3.1.109 (2.8.3.1,2.8.3.8)"
compute_fullness(definition,present)
definition="2.1.3.1 1.1.1.37 4.2.1.2 1.3.5.1 2.8.3.27"
compute_fullness(definition,present)
definition="1.1.1.173,1.1.1.378 3.1.1.65 4.2.1.90 4.1.2.53"
compute_fullness(definition,present)
present
definition="(1.1.1.173,1.1.1.378) 3.1.1.65 4.2.1.90 4.1.2.53"
compute_fullness(definition,present)
#Load DAMMA library
library(DAMMA)
#Load DAMMA support data
data(damma_data)
#Visualise example annotations
head(annotations_example)
#Visualise functions table
head(functions_table)
distilled_table <- damma(annotations_example,functions_table,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
distilled_table_compounds <- damma_compounds(distilled_table,functions_table)
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(distilled_table_compounds)
colnames(compounds_table_df) <- c("MAGs","Compounds","Fullness")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Dietary carbohydrate degradation","Dietary lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=MAGs, y=Compounds, fill=Fullness, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
distilled_table_compounds_bin <- damma_bin(distilled_table_compounds,threshold=0.9,completeness=completeness_table)
completeness_table <- cbind(genome=c("bin_m1.cct123","bin_m1.mtb106","bin_m1.mtb2","bin_m1.mxb107_sub","bin_m1.vmb35","bin_m1.vmb46","bin_m9.vmb60"),completeness=c(100,98,85.8,94.5,97,100,70))
distilled_table_compounds_bin <- damma_bin(distilled_table_compounds,threshold=0.9,completeness=completeness_table
)
distilled_table_compounds_bin <- damma_bin(distilled_table_compounds,threshold=0.9)
compounds_table_df <- melt(distilled_table_compounds_bin)
colnames(compounds_table_df) <- c("MAGs","Compounds","Fullness")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Dietary carbohydrate degradation","Dietary lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=MAGs, y=Compounds, fill=Fullness, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
annotations_file="/Users/anttonalberdi/annotations.tsv"
functions_file="/Users/anttonalberdi/github/DAMMA/data/DAMMA_functions_20220620.tsv"
annotations <- fread(annotations_file)
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60") | (fasta == "bin_m1.mtb106") | (fasta == "bin_m1.mtb2") | (fasta == "bin_m1.mxb107_sub") | (fasta == "bin_m1.vmb35") | (fasta == "bin_m1.vmb46") | (fasta == " bin_m10.cct0"),]
write.table(annotations,"data/annotations.tsv",row.names=TRUE,col.names=TRUE,quote=FALSE,sep="\t")
write.table(annotations,"data/annotations.tsv",row.names=FALSE,col.names=TRUE,quote=FALSE,sep="\t")
head(annotations)
annotations <- fread("data/annotations_file.tsv")
annotations <- fread("data/annotations.tsv")
head(annotations)
annotations_example <- fread("data/annotations.tsv")
functions_table_FD1 <- read.table("data/DAMMA_functions_FD1.tsv",header=TRUE,sep="\t")
functions_table_FD2 <- read.table("data/DAMMA_functions_FD2.tsv",header=TRUE,sep="\t")
functions_table_FD3 <- read.table("data/DAMMA_functions_FD3.tsv",header=TRUE,sep="\t")
#Use latest version as default
functions_table <- FD3
save(functions_table,annotations_example,
functions_table_FD1,
functions_table_FD2,
functions_table_FD3,
file="data/damma_data.RData")
annotations_example <- fread("data/annotations.tsv")
functions_table_FD1 <- read.table("data/DAMMA_functions_FD1.tsv",header=TRUE,sep="\t")
functions_table_FD2 <- read.table("data/DAMMA_functions_FD2.tsv",header=TRUE,sep="\t")
functions_table_FD3 <- read.table("data/DAMMA_functions_FD3.tsv",header=TRUE,sep="\t")
#Use latest version as default
functions_table <- functions_table_FD3
save(functions_table,annotations_example,
functions_table_FD1,
functions_table_FD2,
functions_table_FD3,
file="data/damma_data.RData")
detach_package(DAMMA)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
#Load DAMMA support data
data(damma_data)
#Visualise example annotations
head(annotations_example)
#Visualise functions table
head(functions_table)
functions_table_FD1
distilled_table_functions <- damma_functions(distilled_table_compounds,functions_table,normalise=FALSE)
library(DAMMA)
#Load DAMMA support data
data(damma_data)
#Visualise example annotations
head(annotations_example)
#Visualise functions table
head(functions_table)
distilled_table <- damma(annotations_example,functions_table,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
distilled_table_compounds <- damma_compounds(distilled_table,functions_table)
distilled_table_functions <- damma_functions(distilled_table_compounds,functions_table,normalise=FALSE)
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
functions_table_df <- melt(distilled_table_functions)
colnames(functions_table_df) <- c("MAGs","Functions","Index")
functions_table_df$Function <- as.factor(functions_table_df$Function)
functions_table_df$Function <- factor(functions_table_df$Function, levels=c("Dietary carbohydrate degradation","Dietary lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(functions_table_df, aes(x=MAGs, y=Functions, fill=Index))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
distilled_table_compounds_bin <- damma_bin(distilled_table_compounds,threshold=0.9,completeness=completeness_table)
completeness_table <- cbind(genome=c("bin_m1.cct123","bin_m1.mtb106","bin_m1.mtb2","bin_m1.mxb107_sub","bin_m1.vmb35","bin_m1.vmb46","bin_m9.vmb60"),completeness=c(100,98,85.8,94.5,97,100,70))
distilled_table_compounds_bin <- damma_bin(distilled_table_compounds,threshold=0.9,completeness=completeness_table)
distilled_table_compounds_bin
