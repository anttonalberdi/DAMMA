annotation_table <- annotations
annotation_table <- gene_annotations
annotation_table <- as.data.frame(annotation_table)
pathway_table <- as.data.frame(pathway_table)
Genomes <- unique(annotation_table[,genomecol])
head(annotation_table)
genomecol=2
Genomes <- unique(annotation_table[,genomecol])
Genomes
eccol=c(10,19)
annotations_Genome[,eccol]
Genome=Genomes[1]
annotations_Genome <- annotation_table[annotation_table[,genomecol] == Genome,]
head(annotations_Genome[,eccol])
head(annotations_Genome)
EC <- unlist(str_match_all(annotations_Genome[,eccol], "(?<=\\[EC:).+?(?=\\])"))
str_match_all(annotations_Genome[,eccol], "(?<=\\[EC:).+?(?=\\])")
str_match_all(annotations_Genome[,eccol][,1], "(?<=\\[EC:).+?(?=\\])")
str_match_all(annotations_Genome[,eccol][,2], "(?<=\\[EC:).+?(?=\\])")
head(annotations_Genome[,eccol][,1])
annotations_Genome[,eccol]
head(annotations_Genome[,eccol])
head(c(annotations_Genome[,eccol]))
X <- head(annotations_Genome[,eccol])
X
c(X)
unlist(c(X))
c(unlist(c(X)))
class(c(unlist(c(X))))
EC <- unlist(str_match_all(c(unlist(c(annotations_Genome[,eccol]))), "(?<=\\[EC:).+?(?=\\])"))
head(EC)
EC <- unique(unlist(strsplit(EC, " ")))
EC <- EC[!grepl("-", EC, fixed = TRUE)]
head(EC)
length(EC)
EC
EC <- unique(unlist(strsplit(EC, " ")),na.rm=TRUE)
EC
EC <- EC[grepl(".", EC, fixed = TRUE)]
EC
EC <- unlist(str_match_all(c(unlist(c(annotations_Genome[,eccol]))), "(?<=\\[EC:).+?(?=\\])"))
EC
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
distilled_table <- damma(gene_annotations,functions_table,genome=2,keggcol=9,eccol=c(10,19),pepcol=12)
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
distilled_table <- damma(gene_annotations,functions_table,genome=2,keggcol=9,eccol=c(10,19),pepcol=12)
head(distilled_table)
distilled_table_compounds <- damma_compounds(distilled_table,functions_table)
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(distilled_table_compounds)
colnames(compounds_table_df) <- c("MAGs","Compounds","Fullness")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=MAGs, y=Compounds, fill=Fullness, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
distilled_table <- damma(gene_annotations,functions_table,genome=2
)
distilled_table <- damma(gene_annotations,functions_table)
annotation_table <- as.data.frame(gene_annotations)
expression_table <- as.data.frame(gene_expression)
genecol=1
sharedgenes <- intersect(rownames(expression_table),annotation_table[,genecol])
expression_table <- as.data.frame(expression_table[sharedgenes,])
annotation_table <- annotation_table[annotation_table[,genecol] %in% sharedgenes,]
head(expression_table)
head(annotation_table)
rownames(expression_table)
expression_table <- gene_expression
head(expression_table)
rownames(expression_table) <- expression_table[,1]
expression_table <- expression_table[,-1]
head(expression_table)
annotation_table <- gene_annotations
head(annotation_table)
sharedgenes <- intersect(rownames(expression_table),annotation_table[,genecol])
head(sharedgenes)
expression_table <- as.data.frame(expression_table[sharedgenes,])
head(expression_table)
annotation_table <- annotation_table[annotation_table[,genecol] %in% sharedgenes,]
head(v)
head(annotation_table)
Genomes <- unique(annotation_table[,genomecol])
genomecol=2
Genomes <- unique(annotation_table[,genomecol])
head(Genomes)
Genome
Genome=Genomes[]
Genome=Genomes[1]
Genome
cat("\t",Genome," (",m,"/",length(Genomes),")\n", sep = "")
annotations_Genome <- annotation_table[annotation_table[,genomecol] == Genome,]
head(annotations_Genome)
kegg <- str_extract(c(unlist(c(annotations_Genome[,keggcol]))), "K[0-9]+")
keggcol=9
kegg <- str_extract(c(unlist(c(annotations_Genome[,keggcol]))), "K[0-9]+")
head(kegg)
kegg <- sort(unique(kegg[!is.na(kegg)]))
head(kegg)
k="K00003"
annotations_Genome[grep(k, annotations_Genome[,keggcol]),genecol]
annotations_Genome[grep(k, annotations_Genome[,c(keggcol,5)]),genecol]
eccol=c(10,19)
EC <- unlist(str_match_all(c(unlist(c(annotations_Genome[,eccol]))), "(?<=\\[EC:).+?(?=\\])")) #Extract ECs
EC <- unique(unlist(strsplit(EC, " "))) #Dereplicate
EC <- EC[!grepl("-", EC, fixed = TRUE)] #Remove ambiguous codes
EC <- sort(I EC[grepl(".", EC, fixed = TRUE)]) #Remove NAs and inproperly formatted codes and sort codes
EC <- sort(EC[grepl(".", EC, fixed = TRUE)]) #Remove NAs and inproperly formatted codes and sort codes
EC
load_all('/Users/anttonalberdi/github/DAMMA')
head(gene_expression)
rownames(gene_expression) <- gene_expression[,1]
gene_expression <- gene_expression[,-1]
distilled_expression_table <- damma_expression(gene_expression,gene_annotations,functions_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
load_all('/Users/anttonalberdi/github/DAMMA')
head(gene_expression)
rownames(gene_expression) <- gene_expression[,1]
gene_expression <- gene_expression[,-1]
distilled_expression_table <- damma_expression(gene_expression,gene_annotations,functions_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
data(damma_data)
head(gene_expression)
rownames(gene_expression) <- gene_expression[,1]
gene_expression <- gene_expression[,-1]
distilled_expression_table <- damma_expression(gene_expression,gene_annotations,functions_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
Genome="ERR4836887_bin.54"
annotations_Genome <- annotation_table[annotation_table[,genomecol] == Genome,]
EC <- unlist(str_match_all(c(unlist(c(annotations_Genome[,eccol]))), "(?<=\\[EC:).+?(?=\\])")) #Extract ECs
EC <- unique(unlist(strsplit(EC, " "))) #Dereplicate
EC <- EC[!grepl("-", EC, fixed = TRUE)] #Remove ambiguous codes
EC <- sort(EC[grepl(".", EC, fixed = TRUE)]) #Remove NAs and inproperly formatted codes and sort codes
EC
head(EC)
head(expression_MCI_table)
load_all('/Users/anttonalberdi/github/DAMMA')
community_fullness <- damma_community(annotations=gene_annotations,functions_table,genome=2,keggcol=9,eccol=c(10,19),pepcol=12)
community_fullness <- damma_community(gene_annotations,functions_table,genome=2,keggcol=9,eccol=c(10,19),pepcol=12)
community_fullness <- damma_community(gene_annotations,functions_table,MCI_table=distilled_table,genome=2,keggcol=9,eccol=c(10,19),pepcol=12)
abundance_table <- genome_counts[,-1]
rownames(abundance_table) <- genome_counts[,1]
community_fullness <- damma_community(gene_annotations,functions_table,abundance_table=abundance_table,MCI_table=distilled_table,genome=2,keggcol=9,eccol=c(10,19),pepcol=12)
load_all('/Users/anttonalberdi/github/DAMMA')
abundance_table <- genome_counts[,-1]
rownames(abundance_table) <- genome_counts[,1]
community_fullness <- damma_community(gene_annotations,functions_table,abundance_table=abundance_table,MCI_table=distilled_table,genome=2,keggcol=9,eccol=c(10,19),pepcol=12)
setwd("/Users/anttonalberdi/github/holofood_damma/")
completeness_caecum <- read.tsv("checkm_caecum.tsv")
completeness_caecum <- read.table("checkm_caecum.tsv",header=T, sep="\t")
completeness_caecum <- read.csv("checkm_caecum.tsv", header=T, sep="\t")
head(completeness_caecum)
completeness_caecum <- read.csv("checkm_caecum.tsv", header=T, sep="\t")[,c(11,12)]
head(completeness_caecum)
completeness_caecum <- read.csv("checkm_caecum.tsv", header=T, sep="\t")[,c(12,13)]
head(completeness_caecum)
completeness_caecum <- read.csv("checkm_caecum.tsv", header=T, sep="\t")[,c(1,12)]
head(completeness_caecum)
completeness_ileum <- read.csv("checkm_ileum.tsv", header=T, sep="\t")[,c(1,12)]
completeness_ileum <- read.csv("checkm_ileum.tsv", header=T, sep="\t")[,c(1,12)]
load("distilled_ileum.RData")
distilled_ileum_corrected <- damma_correction(distilled_ileum,completeness)
load_all('/Users/anttonalberdi/github/DAMMA')
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
completeness_ileum <- read.csv("checkm_ileum.tsv", header=T, sep="\t")[,c(1,12)]
load("distilled_ileum.RData")
distilled_ileum_corrected <- damma_correction(distilled_ileum,completeness)
completeness_ileum <- read.csv("checkm_ileum.tsv", header=T, sep="\t")[,c(1,12)]
load("distilled_ileum.RData")
distilled_ileum_corrected <- damma_correction(distilled_ileum,completeness_ileum)
completeness_caecum <- read.csv("checkm_caecum.tsv", header=T, sep="\t")[,c(1,12)]
load("distilled_caecum.RData")
distilled_caecum_corrected <- damma_correction(distilled_caecum,completeness_caecum)
head(distilled_caecum)
head(completeness_caecum)
head(distilled_ileum)
head(completeness_ileum)
load_all('/Users/anttonalberdi/github/DAMMA')
distilled_caecum_corrected <- damma_correction(distilled_caecum,completeness_caecum)
completeness_caecum[,1]
load_all('/Users/anttonalberdi/github/DAMMA')
distilled_caecum_corrected <- damma_correction(distilled_caecum,completeness_caecum)
load_all('/Users/anttonalberdi/github/DAMMA')
distilled_caecum_corrected <- damma_correction(distilled_caecum,completeness_caecum)
distilled_caecum_corrected_compounds <- damma_compounds(distilled_caecum_corrected,functions_table)
head(distilled_caecum_corrected)
head(functions_table)
distilled_ileum_corrected_compounds <- damma_compounds(distilled_ileum_corrected,functions_table)
head(functions_table)
distilled_table <- distilled_ileum_corrected_compounds
distilled_table <- distilled_ileum_corrected
t(as.data.frame(t(distilled_table)) %>%
rownames_to_column('Code')
head(distilled_table)
t(as.data.frame(t(distilled_table)) %>%
rownames_to_column('Code') %>%
left_join(functions_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound)
)
t(as.data.frame(t(distilled_table)) %>%
rownames_to_column('Code') %>%
left_join(functions_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))))
t(as.data.frame(t(distilled_table)) %>%
rownames_to_column('Code') %>%
left_join(functions_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(functions_table$Compound))))
t(as.data.frame(t(distilled_table)) %>%
rownames_to_column('Code') %>%
left_join(functions_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(functions_table$Compound))) %>%
column_to_rownames('Compound'))
head(as.data.frame(t(distilled_table)) %>%
rownames_to_column('Code') %>%
left_join(functions_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(functions_table$Compound))))
rownames(distilled_table)
functions_table$Code
functions_table$Compound
compounds_table <- as.data.frame(t(distilled_table)) %>%
rownames_to_column('Code') %>%
left_join(functions_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(functions_table$Compound)))
head(compounds_table)
head(distilled_table)
load_all('/Users/anttonalberdi/github/DAMMA')
distilled_ileum_corrected_compounds <- damma_compounds(distilled_ileum_corrected,functions_table)
head(distilled_ileum_corrected_compounds)
as.data.frame(
load_all('/Users/anttonalberdi/github/DAMMA')
distilled_ileum_corrected_compounds <- damma_compounds(distilled_ileum_corrected,functions_table)
head(distilled_ileum_corrected_compounds)
head(distilled_ileum_corrected)
load_all('/Users/anttonalberdi/github/DAMMA')
distilled_ileum_corrected_compounds <- damma_compounds(distilled_ileum_corrected,functions_table)
head(distilled_ileum_corrected_compounds)
as.data.frame(t(distilled_table)) %>%
rownames_to_column('Code') %>%
left_join(functions_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(functions_table$Compound))) %>%
column_to_rownames('Compound')
head(distilled_table)
head(functions_table[,c('Code', 'Compound')])
tail(functions_table[,c('Code', 'Compound')])
#Distillate ileum
annotations_file="annotations_ileum.tsv"
annotations <- fread(annotations_file)
distilled_ileum <- damma(annotations,functions_table,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_ileum,file="distilled_ileum.RData")
library(data.table)
annotations_file="annotations_ileum.tsv"
annotations <- fread(annotations_file)
distilled_ileum <- damma(annotations,functions_table,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_ileum,file="distilled_ileum.RData")
distilled_ileum <- damma(annotations,functions_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_ileum,file="distilled_ileum.RData")
#Distillate ileum
annotations_file="annotations_ileum.tsv"
annotations <- fread(annotations_file)
distilled_ileum <- damma(annotations,functions_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_ileum,file="distilled_ileum.RData")
#Distillate caecum
annotations_file="annotations_caecum.tsv"
annotations <- fread(annotations_file)
distilled_caecum <- damma(annotations,functions_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_caecum,file="distilled_caecum.RData")
completeness_caecum <- read.csv("checkm_caecum.tsv", header=T, sep="\t")[,c(1,12)]
load("distilled_caecum.RData")
distilled_caecum_corrected <- damma_correction(distilled_caecum,completeness_caecum)
completeness_ileum <- read.csv("checkm_ileum.tsv", header=T, sep="\t")[,c(1,12)]
load("distilled_ileum.RData")
distilled_ileum_corrected <- damma_correction(distilled_ileum,completeness_ileum)
distilled_caecum_corrected_compounds <- damma_compounds(distilled_caecum_corrected,functions_table)
distilled_ileum_corrected_compounds <- damma_compounds(distilled_ileum_corrected,functions_table)
head(distilled_caecum_corrected_compounds)
edit(damma_compounds)
load_all('/Users/anttonalberdi/github/DAMMA')
edit(damma_compounds)
detach_package(DAMMA)
detach_package(DAMMA)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
edit(damma_compounds)
library(DAMMA)
distilled_caecum_corrected_compounds <- damma_compounds(distilled_caecum_corrected,functions_table)
head(distilled_caecum_corrected_compounds)
distilled_ileum_corrected_compounds <- damma_compounds(distilled_ileum_corrected,functions_table)
distilled_caecum_corrected_functions <- damma_functions(distilled_caecum_corrected_compounds,functions_table)
distilled_ileum_corrected_functions <- damma_functions(distilled_ileum_corrected_compounds,functions_table)
head(distilled_caecum_corrected_functions)
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(distilled_ileum_compounds)
colnames(compounds_table_df) <- c("Genomes","Compounds","Fullness")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=Fullness, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
#Prepare input table
compounds_table_df <- melt(distilled_ileum_corrected_compounds)
colnames(compounds_table_df) <- c("Genomes","Compounds","Fullness")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=Fullness, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
head(distilled_ileum_corrected_compounds)
compounds_table_df <- melt(distilled_ileum_corrected_compounds)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
compounds_table_df <- melt(distilled_caecum_corrected_compounds1)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
distilled_caecum_corrected_compounds1 <- distilled_caecum_corrected_compounds[c(1:165),]
distilled_caecum_corrected_compounds2 <- distilled_caecum_corrected_compounds[c(166:330),]
distilled_caecum_corrected_compounds3 <- distilled_caecum_corrected_compounds[c(331:495),]
distilled_caecum_corrected_compounds4 <- distilled_caecum_corrected_compounds[c(496:660),]
distilled_caecum_corrected_compounds5 <- distilled_caecum_corrected_compounds[c(661:825),]
compounds_table_df <- melt(distilled_caecum_corrected_compounds1)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
compounds_table_df <- melt(distilled_caecum_corrected_compounds2)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
compounds_table_df <- melt(distilled_caecum_corrected_compounds3)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
compounds_table_df <- melt(distilled_caecum_corrected_compounds4)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
compounds_table_df <- melt(distilled_caecum_corrected_compounds5)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
write.table(distilled_caecum_corrected_compounds,"MCI_compounds_caecum.tsv",row.names=T,col.names=T,sep="\t")
write.table(distilled_ileum_corrected_compounds,"MCI_compounds_ileum.tsv",row.names=T,col.names=T,sep="\t")
write.table(distilled_caecum_corrected_functions,"MCI_functions_caecum.tsv",row.names=T,col.names=T,sep="\t")
write.table(distilled_ileum_corrected_functions,"MCI_functions_ileum.tsv",row.names=T,col.names=T,sep="\t")
load_all('/Users/anttonalberdi/github/DAMMA')
edit(distillate_definition())
annotations_file="annotations_ileum.tsv"
annotations <- fread(annotations_file)
distilled_ileum <- damma(annotations,functions_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_ileum,file="distilled_ileum.RData")
head(annotations)
annotations <- annotations[annotations$fasta == "ERR4647694_bin.1",]
distilled_ileum <- damma(annotations,functions_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
distilled_ileum
annotations_file="annotations_ileum.tsv"
annotations <- fread(annotations_file)
distilled_ileum <- damma(annotations,functions_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_ileum,file="distilled_ileum.RData")
completeness_ileum <- read.csv("checkm_ileum.tsv", header=T, sep="\t")[,c(1,12)]
load("distilled_ileum.RData")
distilled_ileum_corrected <- damma_correction(distilled_ileum,completeness_ileum)
distilled_ileum_corrected_compounds <- damma_compounds(distilled_ileum_corrected,functions_table)
write.table(distilled_ileum_corrected_compounds,"MCI_compounds_ileum.tsv",row.names=T,col.names=T,sep="\t")
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(distilled_ileum_corrected_compounds)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
View(distilled_caecum_corrected_compounds)
subdef <- c("2.3.1.M85"," ","3.1.2.M6")
subdef2 <- subdef[(subdef != " ") & (subdef != "+")]
subdef2
subdef2[grepl("_", subdef2, fixed = TRUE) | grepl("[A-Z]", subdef2, fixed = FALSE)] <- subdef2[grepl("_", subdef2, fixed = TRUE) | grepl("[A-Z]", subdef2, fixed = FALSE)] %in% c(present)
subdef2[grepl("_", subdef2, fixed = TRUE) | grepl("[A-Z]", subdef2, fixed = FALSE)]
#Distillate caecum
annotations_file="annotations_caecum.tsv"
annotations <- fread(annotations_file)
distilled_caecum <- damma(annotations,functions_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_caecum,file="distilled_caecum.RData")
