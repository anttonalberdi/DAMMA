paired$MCI <- as.numeric(paired$MCI)
paired$BW <- as.numeric(paired$BW)
paired$Date <- as.factor(paired$Date)
lm(BW ~ (1 | Trial) + (1 | Date) + MCI, data = paired)
paired$MCI <- as.numeric(paired$MCI)
paired$BW <- as.numeric(paired$BW)
paired$Trial <- as.factor(paired$Trial)
paired$Date <- as.factor(paired$Date)
MCI_BWA_mixed = lm(BW ~ (1 | Trial) + (1 | Date) + MCI, data = paired)
MCI_BWA_mixed
MCI_BWA_mixed = lm(BW ~ Trial + Date + MCI, data = paired)
paired
MCI = community_MCI_caecum_compounds
metadata <- read.table("/Users/anttonalberdi/github/holofood_damma/metadata.tsv",row.names=1,header=T)
metadata <- metadata[rownames(MCI),]
#Filter
metadata_filt <- metadata[metadata$sampling_time == 35,]
MCI_filt <- MCI[rownames(metadata_filt),]
#Correlation
paired <- as.data.frame(cbind(MCI=MCI_filt[,c],BW=metadata_filt$chicken_body_weight,Trial=metadata_filt$trial,Date=metadata_filt$sampling_date))
paired$MCI <- as.numeric(paired$MCI)
paired$BW <- as.numeric(paired$BW)
paired$Trial <- as.factor(paired$Trial)
paired$Date <- as.factor(paired$Date)
MCI_BWA = lm(BW ~ Trial + Date + MCI, data = paired)
MCI_BWA
summary(MCI_BWA)
c
c="D-lactate"
paired <- as.data.frame(cbind(MCI=MCI_filt[,c],BW=metadata_filt$chicken_body_weight,Trial=metadata_filt$trial,Date=metadata_filt$sampling_date))
paired$MCI <- as.numeric(paired$MCI)
paired$BW <- as.numeric(paired$BW)
paired$Trial <- as.factor(paired$Trial)
paired$Date <- as.factor(paired$Date)
MCI_BWA = lm(BW ~ Trial + Date + MCI, data = paired)
summary(MCI_BWA)
load(community_MCI_caecum,file="community_AB_caecum.RData")
community_MCI_caecum_compounds <- damma_compounds(community_MCI_caecum,pathway_table)
load("community_AB_caecum.RData")
community_MCI_AB_caecum_compounds <- damma_compounds(community_MCI_AB_caecum,pathway_table)
load("distilled_caecum.RData")
annotations_file="annotations_caecum.tsv"
annotations_caecum <- fread(annotations_file)
relabun_caecum <- read.table("/Users/anttonalberdi/github/holofood_damma/relabun_AB_caecum.tsv",row.names=1,header=T)
community_MCI_AB_caecum <- damma_community(annotations_caecum,pathway_table,abundance_table=relabun_caecum,MCI_table=distilled_caecum,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(community_MCI_AB_caecum,file="community_AB_caecum.RData")
load("community_AB_caecum.RData")
community_MCI_AB_caecum_compounds <- damma_compounds(community_MCI_AB_caecum,pathway_table)
head(community_MCI_AB_caecum_compounds)
tail(community_MCI_AB_caecum_compounds)
community_MCI_AB_caecum_compounds <- damma_compounds(community_MCI_AB_caecum,pathway_table)
MCI = community_MCI_AB_caecum_compounds
metadata <- read.table("/Users/anttonalberdi/github/holofood_damma/metadata.tsv",row.names=1,header=T)
metadata <- metadata[rownames(MCI),]
#Filter
metadata_filt <- metadata[metadata$sampling_time == 35,]
MCI_filt <- MCI[rownames(metadata_filt),]
head(MCI_filt)
#Filter
metadata_filt <- metadata[metadata$sampling_time == 35,]
MCI_filt <- MCI[rownames(metadata_filt),]
#Correlation
compounds <- colnames(MCI_filt)
cor_table <- c()
for(c in compounds){
paired <- as.data.frame(cbind(MCI=MCI_filt[,c],BW=metadata_filt$chicken_body_weight,Trial=metadata_filt$trial,Date=metadata_filt$sampling_date))
paired$MCI <- as.numeric(paired$MCI)
paired$BW <- as.numeric(paired$BW)
paired$Trial <- as.factor(paired$Trial)
paired$Date <- as.factor(paired$Date)
#MCI_BWA = lm(BW ~ Trial + Date + MCI, data = paired)
#row <- c(compound=c,cor=summary(MCI_BWA_mixed)$varcor,pvalue=round(test$p.value,3))
test <- cor.test(paired$BW,paired$MCI)
row <- c(compound=c,cor=round(test$estimate,2),pvalue=round(test$p.value,3))
cor_table <- rbind(cor_table,row)
}
cor_table <- as.data.frame(cor_table)
cor_table <- cor_table[order(cor_table$pvalue),]
cor_table
paired$Date
head(metadata_filt)
metadata_filt$sampling_date
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-03-11"] <- 1
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-03-12"] <- 2
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-03-13"] <- 3
metadata_filt$sampling_date
#Filter
metadata_filt <- metadata[metadata$sampling_time == 35,]
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-03-11"] <- 1
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-03-12"] <- 2
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-03-13"] <- 3
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-06-3"] <- 1
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-06-4"] <- 2
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-06-5"] <- 3
MCI_filt <- MCI[rownames(metadata_filt),]
c="Menaquinone (K2)"
paired <- as.data.frame(cbind(MCI=MCI_filt[,c],BW=metadata_filt$chicken_body_weight,Trial=metadata_filt$trial,Date=metadata_filt$sampling_date))
paired$MCI <- as.numeric(paired$MCI)
paired$BW <- as.numeric(paired$BW)
paired$Trial <- as.factor(paired$Trial)
paired$Date <- as.factor(paired$Date)
lm(BW ~ Trial + Date + MCI, data = paired)
summary(lm(BW ~ Trial + Date + MCI, data = paired))
MCI = community_MCI_AB_caecum_compounds
metadata <- read.table("/Users/anttonalberdi/github/holofood_damma/metadata.tsv",row.names=1,header=T)
metadata <- metadata[rownames(MCI),]
#Filter
metadata_filt <- metadata[metadata$sampling_time == 35,]
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-03-11"] <- 1
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-03-12"] <- 2
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-03-13"] <- 3
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-06-3"] <- 1
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-06-4"] <- 2
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-06-5"] <- 3
MCI_filt <- MCI[rownames(metadata_filt),]
metadata_filt$sampling_date
metadata_filt <- metadata[metadata$sampling_time == 35,]
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-03-11"] <- 1
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-03-12"] <- 2
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-03-13"] <- 3
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-06-03"] <- 1
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-06-04"] <- 2
metadata_filt$sampling_date[metadata_filt$sampling_date == "2019-06-05"] <- 3
MCI_filt <- MCI[rownames(metadata_filt),]
c="Menaquinone (K2)"
paired <- as.data.frame(cbind(MCI=MCI_filt[,c],BW=metadata_filt$chicken_body_weight,Trial=metadata_filt$trial,Date=metadata_filt$sampling_date))
paired$MCI <- as.numeric(paired$MCI)
paired$BW <- as.numeric(paired$BW)
paired$Trial <- as.factor(paired$Trial)
paired$Date <- as.factor(paired$Date)
summary(lm(BW ~ Trial + Date + MCI, data = paired))
summary(lm(BW ~ MCI, data = paired))
c="Beta-mannan"
paired <- as.data.frame(cbind(MCI=MCI_filt[,c],BW=metadata_filt$chicken_body_weight,Trial=metadata_filt$trial,Date=metadata_filt$sampling_date))
paired$MCI <- as.numeric(paired$MCI)
paired$BW <- as.numeric(paired$BW)
paired$Trial <- as.factor(paired$Trial)
paired$Date <- as.factor(paired$Date)
summary(lm(BW ~ Trial + Date + MCI, data = paired))
nrow(MCI_filt)
load("community_AB_caecum.RData")
community_MCI_AB_caecum_compounds <- damma_compounds(community_MCI_AB_caecum,pathway_table)
MCI = community_MCI_AB_caecum_compounds
metadata <- read.table("/Users/anttonalberdi/github/holofood_damma/metadata.tsv",row.names=1,header=T)
metadata <- metadata[rownames(MCI),]
nrow(metadata)
rownames(MCI_table)
load("community_AB_caecum.RData")
MCI_table <- community_MCI_AB_caecum
rownames(MCI_table) %in% pathway_table$Code
any(rownames(MCI_table) %in% pathway_table$Code)
any(rownames(MCI_table) %in% pathway_table$Compounds)
rownames(MCI_table
)
any(colnames(MCI_table) %in% pathway_table$Code)
colnames(MCI_table)
any(colnames(MCI_table) %in% pathway_table$Compounds)
rowMeans(MCI_table)
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
help(damma_index)
library(roxygen2)
roxygenize()
library(roxygen2)
roxygenize()
library(roxygen2)
roxygenize()
library(roxygen2)
roxygenize()
library(roxygen2)
roxygenize()
library(roxygen2)
roxygenize()
load_all('/Users/anttonalberdi/github/DAMMA')
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
setwd("/Users/anttonalberdi/github/holofood_damma/")
load("community_AB_caecum.RData")
damma_index(community_MCI_AB_caecum,pathway_table)
MCI <- damma_index(community_MCI_AB_caecum,pathway_table)
MCI_melted <- melt(MCI)
library(data.table)
MCI_melted <- melt(MCI)
head(MCI_melted)
MCI <- damma_index(community_MCI_AB_caecum,pathway_table)
MCI_melted <- melt(MCI)
metadata <- read.table("/Users/anttonalberdi/github/holofood_damma/metadata.tsv",row.names=1,header=T)
metadata <- metadata[rownames(MCI_melted),]
head(metadata)
MCI_metadata <- merge(MCI_melted,metadata,by="row.names")
head(MCI_metadata)
colnames(MCI_metadata)[1:2] <- c("sample","MCI")
head(MCI_metadata)
ggplot(MCI_metadata, aes(x=Samples, y=MCI, fill=MCI, group=sampling_time)) +
geom_jitter()
geom_boxplot()
library(ggplot2)
ggplot(MCI_metadata, aes(x=Samples, y=MCI, fill=MCI, group=sampling_time)) +
geom_jitter() +
geom_boxplot()
ggplot(MCI_metadata, aes(x=sample, y=MCI, fill=MCI, group=sampling_time)) +
geom_jitter() +
geom_boxplot()
class(MCI_metadata$MCI)
ggplot(MCI_metadata, aes(x=sample, y=MCI, fill=sampling_time, group=sampling_time)) +
geom_jitter() +
geom_boxplot()
ggplot(MCI_metadata, aes(x=sample, y=MCI, group=sampling_time)) +
geom_jitter()
ggplot(MCI_metadata, aes(x=sample, y=MCI, group=sampling_time)) +
geom_boxplot()
ggplot(MCI_metadata, aes(x=sampling_time, y=MCI, group=sampling_time)) +
geom_boxplot()
ggplot(MCI_metadata, aes(x=sampling_time, y=MCI, group=sampling_time)) +
geom_jitter() +
geom_boxplot()
ggplot(MCI_metadata, aes(x=sampling_time, y=MCI, color=sex, group=sampling_time)) +
geom_jitter() +
geom_boxplot()
ggplot(MCI_metadata, aes(x=sampling_time, y=MCI, color=breed, group=sampling_time)) +
geom_jitter() +
geom_boxplot()
ggplot(MCI_metadata, aes(x=sampling_time, y=MCI, color=trial, group=sampling_time)) +
geom_jitter() +
geom_boxplot()
MCI_metadata_sub <- MCI_metadata[MCI_metadata$sampling_time == 35,]
head(MCI_metadata_sub)
MCI_metadata_sub <- MCI_metadata[MCI_metadata$sampling_time == 35,]
cor.test(MCI_metadata_sub$MCI,MCI_metadata_sub$chicken_body_weight)
MCI_metadata_sub <- MCI_metadata[MCI_metadata$sampling_time == 7,]
cor.test(MCI_metadata_sub$MCI,MCI_metadata_sub$chicken_body_weight)
MCI_metadata_sub <- MCI_metadata[MCI_metadata$sampling_time == 21,]
cor.test(MCI_metadata_sub$MCI,MCI_metadata_sub$chicken_body_weight)
plot(MCI_metadata_sub$MCI,MCI_metadata_sub$chicken_body_weight)
abline(lm(MCI_metadata_sub$chicken_body_weight ~ MCI_metadata_sub$MCI), col = 4, lwd = 3)
summary(lm(chicken_body_weight ~ Trial + Date + MCI, data = MCI_metadata_sub))
summary(lm(chicken_body_weight ~ trial + sampling_date + MCI, data = MCI_metadata_sub))
summary(lm(chicken_body_weight ~ trial + MCI, data = MCI_metadata_sub))
head(MCI_metadata_sub)
tail(MCI_metadata_sub)
cor.test(MCI_metadata_sub$MCI,MCI_metadata_sub$chicken_body_weight)
MCI <- damma_function(dama_compound(community_MCI_AB_caecum,pathway_table),pathway_table)
MCI <- damma_functions(dama_compounds(community_MCI_AB_caecum,pathway_table),pathway_table)
MCI <- damma_functions(damma_compounds(community_MCI_AB_caecum,pathway_table),pathway_table)
head(MCI)
MCI <- damma_functions(damma_compounds(community_MCI_AB_caecum,pathway_table),pathway_table)
MCI_melted <- melt(MCI)
MCI_melted
MCI_metadata <- merge(MCI_melted,metadata,by.x="sample",by.y="row.names")
MCI_metadata <- merge(MCI_melted,metadata,by.x="sample",by.y="rownames")
head(MCI_melted)
colnames(MCI_melted) <- c("sample","function","MCI")
MCI_metadata <- merge(MCI_melted,metadata,by.x="sample",by.y="rownames")
MCI_metadata <- merge(MCI_melted,metadata,by.x="sample",by.y="row.names")
head(MCI_metadata)
ggplot(MCI_metadata, aes(x=sampling_time, y=MCI, color=function, group=sampling_time)) +
geom_jitter()
ggplot(MCI_metadata, aes(x=sampling_time, y=MCI, color="function", group=sampling_time)) +
geom_jitter()
ggplot(MCI_metadata, aes(x=sampling_time, y=MCI, color=func, group=sampling_time)) +
geom_jitter()
MCI <- damma_functions(damma_compounds(community_MCI_AB_caecum,pathway_table),pathway_table)
MCI_melted <- melt(MCI)
colnames(MCI_melted) <- c("sample","func","MCI")
MCI_metadata <- merge(MCI_melted,metadata,by.x="sample",by.y="row.names")
ggplot(MCI_metadata, aes(x=sampling_time, y=MCI, color=func, group=sampling_time)) +
geom_jitter()
ggplot(MCI_metadata, aes(x=sampling_time, y=MCI, color=func, group=sampling_time)) +
geom_line()
ggplot(MCI_metadata, aes(x=sampling_time, y=MCI, color=func, group=sampling_time)) +
geom_jitter() +
geom_smooth(method=lm)
unique(MCI_metadata$func)
MCI_metadata_sub <- MCI_metadata[(MCI_metadata$sampling_time == 21) && MCI_metadata$func =="Polysaccharide degradation",]
cor.test(MCI_metadata_sub$MCI,MCI_metadata_sub$chicken_body_weight)
MCI_metadata_sub <- MCI_metadata[(MCI_metadata$sampling_time == 35) && (MCI_metadata$func =="Polysaccharide degradation"),]
MCI_metadata_sub
MCI <- damma_functions(damma_compounds(community_MCI_AB_caecum,pathway_table),pathway_table)
MCI_melted <- melt(MCI)
colnames(MCI_melted) <- c("sample","func","MCI")
MCI_metadata <- merge(MCI_melted,metadata,by.x="sample",by.y="row.names")
head(MCI_metadata)
MCI_metadata_sub <- MCI_metadata[(MCI_metadata$sampling_time == 35) && (MCI_metadata$func =="Polysaccharide degradation"),]
head(MCI_metadata_sub)
MCI_metadata[(MCI_metadata$sampling_time == 35) && (MCI_metadata$func == "Polysaccharide degradation"),]
class(MCI_metadata$func)
MCI_metadata$func
MCI_metadata_sub <- MCI_metadata[(MCI_metadata$sampling_time == 35) & (MCI_metadata$func == "Polysaccharide degradation"),]
MCI_metadata_sub
cor.test(MCI_metadata_sub$MCI,MCI_metadata_sub$chicken_body_weight)
#Correlation with weight
MCI_metadata_sub <- MCI_metadata[(MCI_metadata$sampling_time == 35) & (MCI_metadata$func == "Sugar degradation"),]
cor.test(MCI_metadata_sub$MCI,MCI_metadata_sub$chicken_body_weight)
MCI_metadata_sub <- MCI_metadata[(MCI_metadata$sampling_time == 35) & (MCI_metadata$func == "Protein degradation"),]
cor.test(MCI_metadata_sub$MCI,MCI_metadata_sub$chicken_body_weight)
MCI_metadata_sub <- MCI_metadata[(MCI_metadata$sampling_time == 21) & (MCI_metadata$func == "Protein degradation"),]
cor.test(MCI_metadata_sub$MCI,MCI_metadata_sub$chicken_body_weight)
MCI_metadata_sub <- MCI_metadata[(MCI_metadata$sampling_time == 21) & (MCI_metadata$func == "Amino acid production"),]
cor.test(MCI_metadata_sub$MCI,MCI_metadata_sub$chicken_body_weight)
MCI_metadata_sub <- MCI_metadata[(MCI_metadata$sampling_time == 21) & (MCI_metadata$func == "Mucin degradation"),]
cor.test(MCI_metadata_sub$MCI,MCI_metadata_sub$chicken_body_weight)
plot(MCI_metadata_sub$MCI,MCI_metadata_sub$chicken_body_weight)
abline(lm(MCI_metadata_sub$chicken_body_weight ~ MCI_metadata_sub$MCI), col = 4, lwd = 3)
MCI_metadata_sub <- MCI_metadata[(MCI_metadata$sampling_time == 21) & (MCI_metadata$func == "SCFA production"),]
cor.test(MCI_metadata_sub$MCI,MCI_metadata_sub$chicken_body_weight)
MCI_metadata_sub <- MCI_metadata[(MCI_metadata$sampling_time == 35) & (MCI_metadata$func == "SCFA production"),]
cor.test(MCI_metadata_sub$MCI,MCI_metadata_sub$chicken_body_weight)
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
load("community_AB_caecum.RData")
damma_functions(community_MCI_AB_caecum,pathway_table)
head(damma_functions(community_MCI_AB_caecum,pathway_table))
head(damma_functions(damma_compounds(community_MCI_AB_caecum,pathway_table)))
head(damma_functions(damma_compounds(community_MCI_AB_caecum,pathway_table),pathway_table))
head(damma_compounds(community_MCI_AB_caecum,pathway_table))
comp <.- damma_compounds(community_MCI_AB_caecum,pathway_table)
comp <- damma_compounds(community_MCI_AB_caecum,pathway_table)
head(damma_functions(comp,pathway_table)
)
colnames(comp)
colnames(comp) %in% pathway_table$Compounds)
colnames(comp) %in% pathway_table$Compounds
pathway_table$Compounds
pathway_table
head(pathway_table)
load_all('/Users/anttonalberdi/github/DAMMA')
head(damma_functions(damma_compounds(community_MCI_AB_caecum,pathway_table),pathway_table))
head(damma_functions(community_MCI_AB_caecum,pathway_table))
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
gene_expression <- fread("gene_expression_caecum.tsv")
genome_annotations <- fread("genome_annotations_caecum.tsv")
setwd("/Users/anttonalberdi/github/holofood_damma_metatranscriptomics/")
gene_expression <- fread("gene_expression_caecum.tsv")
genome_annotations <- fread("genome_annotations_caecum.tsv")
head(gene_expression)
startsWith(colnames(gene_expression), "CA"))
startsWith(colnames(gene_expression), "CA")
!startsWith(colnames(gene_expression), "CA")
!startsWith(colnames(gene_expression), c("CA","CB"))
gene_expression_C <- gene_expression[,!startsWith(colnames(gene_expression), c("CA","CB"))]
head(gene_expression_C)
!startsWith(colnames(gene_expression), c("CA","CB"))
gene_expression_C <- gene_expression[,colnames(gene_expression)[!startsWith(colnames(gene_expression), c("CA","CB"))]]
head(gene_expression_C)
colnames(gene_expression)[!startsWith(colnames(gene_expression), c("CA","CB"))]
gene_expression_C <- gene_expression[,colnames(gene_expression)[!startsWith(colnames(gene_expression), "CA")]]
head(gene_expression_C)
colnames(gene_expression)[!startsWith(colnames(gene_expression), "CA")]
gene_expression_C <- gene_expression[,colnames(gene_expression)[!startsWith(colnames(gene_expression), "CA")]]
head(gene_expression_C)
colnames(gene_expression)[!startsWith(colnames(gene_expression), "CA")]
head(gene_expression)
head(gene_expression[,colnames(gene_expression)[!startsWith(colnames(gene_expression), "CA")]])
colnames(gene_expression)[!startsWith(colnames(gene_expression), "CA")]
gene_expression_C <- gene_expression[,as.character(colnames(gene_expression)[!startsWith(colnames(gene_expression), "CA")])]
head(gene_expression_C)
as.character(colnames(gene_expression)[!startsWith(colnames(gene_expression), "CA")])
class(as.character(colnames(gene_expression)[!startsWith(colnames(gene_expression), "CA")]))
head(gene_expression)
gene_expression_C <- gene_expression[,select(as.character(colnames(gene_expression)[!startsWith(colnames(gene_expression), "CA")]))]
gene_expression_C <- gene_expression[,as.character(colnames(gene_expression)[!startsWith(colnames(gene_expression), "CA")]), with = FALSE]
head(gene_expression_C)
gene_expression_C <- gene_expression[,as.character(colnames(gene_expression)[!startsWith(colnames(gene_expression), "CA") & !startsWith(colnames(gene_expression), "CB")]), with = FALSE]
head(gene_expression_C)
gene_expression_A <- gene_expression[,as.character(colnames(gene_expression)[!startsWith(colnames(gene_expression), "CB") & !startsWith(colnames(gene_expression), "CC")]), with = FALSE]
gene_expression_B <- gene_expression[,as.character(colnames(gene_expression)[!startsWith(colnames(gene_expression), "CA") & !startsWith(colnames(gene_expression), "CC")]), with = FALSE]
gene_expression_C <- gene_expression[,as.character(colnames(gene_expression)[!startsWith(colnames(gene_expression), "CA") & !startsWith(colnames(gene_expression), "CB")]), with = FALSE]
head(gene_expression_A)
colnames(gene_expression)
gene_expression <- gene_expression[,c(1:128)]
colnames(gene_expression)
rownames(gene_expression) <- gene_expression[,1]
gene_expression <- gene_expression[,-1]
ºgene_expression <- as.matrix(fread("gene_expression_caecum.tsv"),rownames=1)
gene_expression <- as.matrix(fread("gene_expression_caecum.tsv"),rownames=1)
head(gene_expression)
gene_expression <- as.data.frame(fread("gene_expression_caecum.tsv"),rownames=1)
head(gene_expression)
colnames(gene_expression)
gene_expression <- fread("gene_expression_caecum.tsv")
gene_expression <- gene_expression[,c(1:128)]
rownames(gene_expression) <- gene_expression[,1]
gene_expression <- gene_expression[,-1]
gene_expression
gene_expression <- fread("gene_expression_caecum.tsv")
gene_expression <- gene_expression[,c(1:128)]
gene_expression_A <- gene_expression[,as.character(colnames(gene_expression)[!startsWith(colnames(gene_expression), "CB") & !startsWith(colnames(gene_expression), "CC")]), with = FALSE]
gene_expression_B <- gene_expression[,as.character(colnames(gene_expression)[!startsWith(colnames(gene_expression), "CA") & !startsWith(colnames(gene_expression), "CC")]), with = FALSE]
gene_expression_C <- gene_expression[,as.character(colnames(gene_expression)[!startsWith(colnames(gene_expression), "CA") & !startsWith(colnames(gene_expression), "CB")]), with = FALSE]
head(gene_expression_A)
gene_expression_A <- as.data.frame(gene_expression[,as.character(colnames(gene_expression)[!startsWith(colnames(gene_expression), "CB") & !startsWith(colnames(gene_expression), "CC")]), with = FALSE])
head(gene_expression_A)
rownames(gene_expression_A) <- gene_expression_A[,1]
gene_expression_A <- gene_expression_A[,-1]
head(gene_expression_A)
rownames(gene_expression) <- gene_expression[,1]
gene_expression <- gene_expression[,-1]
head(gene_expression)
gene_expression <- fread("gene_expression_caecum.tsv")
gene_expression <- as.data.frame(gene_expression[,c(1:128)])
rownames(gene_expression) <- gene_expression[,1]
gene_expression <- gene_expression[,-1]
head(gene_expression)
ncol(gene_expression)
gene_expression_A <- gene_expression[,colnames(gene_expression)[startsWith(colnames(gene_expression), "CA")]]
head(gene_expression_A)
gene_expression_A <- gene_expression[,colnames(gene_expression)[startsWith(colnames(gene_expression), "CA")]]
gene_expression_B <- gene_expression[,colnames(gene_expression)[startsWith(colnames(gene_expression), "CB")]]
gene_expression_C <- gene_expression[,colnames(gene_expression)[startsWith(colnames(gene_expression), "CC")]]
head(gene_expression_C)
distilled_expression_caecum_A <- damma_expression(gene_expression_A,genome_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
head(gene_expression)
gene_expression <- fread("gene_expression_caecum.tsv")
gene_expression$MAGs
gene_expression$MAG
MAGs <- sort(unique(gene_expression$MAG))
head(MAGs)
gene_expression_1 <- gene_expression[gene_expression$MAG %in% MAGs[c(1:100)],]
nrow(gene_expression_1)
nrow(gene_expression_)
nrow(gene_expression)
MAGs[c(1:100)]
length(MAGs)
gene_expression_1 <- gene_expression[gene_expression$MAG %in% MAGs[c(1:100)],]
gene_expression_2 <- gene_expression[gene_expression$MAG %in% MAGs[c(101:200)],]
gene_expression_3 <- gene_expression[gene_expression$MAG %in% MAGs[c(201:300)],]
gene_expression_4 <- gene_expression[gene_expression$MAG %in% MAGs[c(301:400)],]
gene_expression_5 <- gene_expression[gene_expression$MAG %in% MAGs[c(401:500)],]
gene_expression_6 <- gene_expression[gene_expression$MAG %in% MAGs[c(501:600)],]
gene_expression_7 <- gene_expression[gene_expression$MAG %in% MAGs[c(601:700)],]
gene_expression_8 <- gene_expression[gene_expression$MAG %in% MAGs[c(701:825)],]
head(gene_expression_3)
gene_expression_1 <- gene_expression[gene_expression$MAG %in% MAGs[c(1:100)],]
gene_expression_2 <- gene_expression[gene_expression$MAG %in% MAGs[c(101:200)],]
gene_expression_3 <- gene_expression[gene_expression$MAG %in% MAGs[c(201:300)],]
gene_expression_4 <- gene_expression[gene_expression$MAG %in% MAGs[c(301:400)],]
gene_expression_5 <- gene_expression[gene_expression$MAG %in% MAGs[c(401:500)],]
gene_expression_6 <- gene_expression[gene_expression$MAG %in% MAGs[c(501:600)],]
gene_expression_7 <- gene_expression[gene_expression$MAG %in% MAGs[c(601:700)],]
gene_expression_8 <- gene_expression[gene_expression$MAG %in% MAGs[c(701:825)],]
gene_expression_sub <- as.data.frame(gene_expression_1[,c(1:128)])
rownames(gene_expression_sub) <- gene_expression_sub[,1]
gene_expression_sub <- gene_expression_sub[,-1]
gene_expression <- fread("gene_expression_caecum.tsv")
#Chunk analysis to sets of 100 MAGs
MAGs <- sort(unique(gene_expression$MAG))
gene_expression_1 <- gene_expression[gene_expression$MAG %in% MAGs[c(1:100)],]
gene_expression_2 <- gene_expression[gene_expression$MAG %in% MAGs[c(101:200)],]
gene_expression_3 <- gene_expression[gene_expression$MAG %in% MAGs[c(201:300)],]
gene_expression_4 <- gene_expression[gene_expression$MAG %in% MAGs[c(301:400)],]
gene_expression_5 <- gene_expression[gene_expression$MAG %in% MAGs[c(401:500)],]
gene_expression_6 <- gene_expression[gene_expression$MAG %in% MAGs[c(501:600)],]
gene_expression_7 <- gene_expression[gene_expression$MAG %in% MAGs[c(601:700)],]
gene_expression_8 <- gene_expression[gene_expression$MAG %in% MAGs[c(701:825)],]
gene_expression_1 <- as.data.frame(gene_expression_1[,c(1:128)])
rownames(gene_expression_1) <- gene_expression_1[,1]
gene_expression_1 <- gene_expression_1[,-1]
distilled_expression_caecum_1 <- damma_expression(gene_expression_1,genome_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_expression_caecum_1,file="distilled_caecum_1.RData")
gene_expression_1 <- gene_expression[gene_expression$MAG %in% MAGs[c(1:1)],]
gene_expression_1 <- as.data.frame(gene_expression_1[,c(1:128)])
rownames(gene_expression_1) <- gene_expression_1[,1]
gene_expression_1 <- gene_expression_1[,-1]
distilled_expression_caecum_1 <- damma_expression(gene_expression_1,genome_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
distilled_expression_caecum_1 <- damma_expression(gene_expression_1,genome_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
stringi
distilled_expression_caecum_1 <- damma_expression(gene_expression_1,genome_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
load_all('/Users/anttonalberdi/github/DAMMA')
distilled_expression_caecum_1 <- damma_expression(gene_expression_1,genome_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
library(stringi)
distilled_expression_caecum_1 <- damma_expression(gene_expression_1,genome_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
load_all('/Users/anttonalberdi/github/DAMMA')
distilled_expression_caecum_1 <- damma_expression(gene_expression_1,genome_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
load_all('/Users/anttonalberdi/github/DAMMA')
distilled_expression_caecum_1 <- damma_expression(gene_expression_1,genome_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
load_all('/Users/anttonalberdi/github/DAMMA')
distilled_expression_caecum_1 <- damma_expression(gene_expression_1,genome_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
load_all('/Users/anttonalberdi/github/DAMMA')
distilled_expression_caecum_1 <- damma_expression(gene_expression_1,genome_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
distilled_expression_caecum_1
mean(1,2)
mean(c(1,2)
)
setwd("/Users/anttonalberdi/github/holofood_damma_metatranscriptomics/")
library(data.table)
library(DAMMA)
######
# Generate pathway-level expression MCIs
######
gene_expression <- fread("gene_expression_caecum.tsv")
#Chunk analysis to sets of 100 MAGs
MAGs <- sort(unique(gene_expression$MAG))
gene_expression_1 <- gene_expression[gene_expression$MAG %in% MAGs[c(1:100)],]
gene_expression_1 <- as.data.frame(gene_expression_1[,c(1:128)])
rownames(gene_expression_1) <- gene_expression_1[,1]
gene_expression_1 <- gene_expression_1[,-1]
distilled_expression_caecum_1 <- damma_expression(gene_expression_1,genome_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_expression_caecum_1,file="distilled_caecum_1.RData")
setwd("/Users/anttonalberdi/github/holofood_damma_metatranscriptomics/")
library(data.table)
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
load("distilled_caecum_1.RData")
distilled_expression_caecum_1_compounds <- damma_compounds(distilled_expression_caecum_1,pathway_table)
head(distilled_expression_caecum_1)
