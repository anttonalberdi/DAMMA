gene_expression_5 <- norm_counts_MAG[norm_counts_MAG$fasta %in% MAGs[c(401:500)],c(1:127)]
gene_expression_6 <- norm_counts_MAG[norm_counts_MAG$fasta %in% MAGs[c(501:600)],c(1:127)]
gene_expression_7 <- norm_counts_MAG[norm_counts_MAG$fasta %in% MAGs[c(601:700)],c(1:127)]
gene_expression_8 <- norm_counts_MAG[norm_counts_MAG$fasta %in% MAGs[c(701:825)],c(1:127)]
head(gene_expression_4)
distilled_expression_caecum_4 <- damma_expression(gene_expression_4,genome_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_expression_caecum_4,file="distilled_caecum_4.RData")
decompose_definition
definition="K01580 (K13524,K07250,K00823,K16871) (K00135,K00139,K17761)"
decompose_definition(definition)
unlist(strsplit(definition, "() ,", perl=TRUE))
unlist(strsplit(definition, "(?<=() ,)", perl=TRUE))
unlist(strsplit(definition, "(?<=[() ,])", perl=TRUE))
unlist(strsplit(definition, "(?<=[( ) ,])", perl=TRUE))
unlist(strsplit(definition, "(?<=[ ( ),])", perl=TRUE))
unlist(strsplit(definition, "[ ( ),]+", perl=TRUE))
unlist(strsplit(definition, "(?=[ ( ),]+)", perl=TRUE))
decompose_definition(definition)
definition="1.2.7.1 (2.3.1.9,2.3.1.16) 1.1.1.35 4.2.1.150 1.3.1.109 2.3.1.19 (2.7.2.7,2.7.2.14)"
decompose_definition(definition)
unlist(strsplit(definition, "(?=[ ( ),]+)", perl=TRUE))
load_all('/Users/anttonalberdi/github/DAMMA')
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
library(profvis)
profvis(distilled_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12))
def_decomp
load_all('/Users/anttonalberdi/github/DAMMA')
profvis(distilled_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12))
load_all('/Users/anttonalberdi/github/DAMMA')
load_all('/Users/anttonalberdi/github/DAMMA')
profvis(distilled_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12))
load_all('/Users/anttonalberdi/github/DAMMA')
profvis(distilled_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12))
setwd("/Users/anttonalberdi/github/holofood_damma_metatranscriptomics/")
library(data.table)
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
load("distilled_caecum_1.RData")
load("distilled_caecum_2.RData")
load("distilled_caecum_3.RData")
load("distilled_caecum_4.RData")
load("distilled_caecum_5.RData")
load("distilled_caecum_6.RData")
load("distilled_caecum_7.RData")
load("distilled_caecum_8.RData")
distilled_expression_caecum <- c(distilled_expression_caecum_1,distilled_expression_caecum_2,distilled_expression_caecum_3,distilled_expression_caecum_4,distilled_expression_caecum_5,distilled_expression_caecum_6,distilled_expression_caecum_7,distilled_expression_caecum_8)
head(distilled_expression_caecum)
length(distilled_expression_caecum)
distilled_expression_caecum_merged <- Reduce("+", distilled_expression_caecum)
distilled_expression_caecum_merged_compounds <- damma_compounds(distilled_expression_caecum_merged,pathway_table)
distilled_expression_caecum_merged_compounds <- distilled_expression_caecum_merged_compounds[sort(rownames(distilled_expression_caecum_merged_compounds)),]
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(distilled_expression_caecum_merged_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,unique(pathway_table[,c("Compound","Function")]),by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
compounds_table_df2$MCI <- log(compounds_table_df2$MCI)
compounds_table_df2$MCI[which(!is.finite(compounds_table_df2$MCI))] <- 0
max=max(compounds_table_df2$MCI)
min=min(compounds_table_df2$MCI)
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(min,max), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
head(compounds_table_df2)
compounds_table_df <- melt(distilled_expression_caecum_merged_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,unique(pathway_table[,c("Compound","Function")]),by.x="Compounds",by.y="Compound")
head(compounds_table_df)
compounds_table_df$Samples <- gsub("F1a","",compounds_table_df$Samples)
head(compounds_table_df)
compounds_table_df2 <- merge(compounds_table_df,unique(pathway_table[,c("Compound","Function")]),by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
head(compounds_table_df2)
compounds_table_df2$trial_time <- paste(compounds_table_df2$trial,compounds_table_df2$sampling_time,sep="_")
head(compounds_table_df2)
compounds_table_df2$trial_time <- as.factor(compounds_table_df2$trial_time)
compounds_table_df2$trial_time
compounds_table_df2$trial_time <- as.factor(compounds_table_df2$trial_time)
compounds_table_df2$trial_time <- factor(compounds_table_df2$trial_time, levels=c("CA_7","CB_7","CA_21","CB_21","CA_35","CB_35","CC_7","CC_21","CC_35"))
ggplot(compounds_table_df2, aes(x=trial_time, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(min,max), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
compounds_table_df2 <- compounds_table_df2[sort(compounds_table_df2$trial_time),]
compounds_table_df2
tail(compounds_table_df2)
ggplot(compounds_table_df2, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(min,max), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
compounds_table_df <- melt(distilled_expression_caecum_merged_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df$Samples <- gsub("F1a","",compounds_table_df$Samples)
compounds_table_df2 <- merge(compounds_table_df,unique(pathway_table[,c("Compound","Function")]),by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
compounds_table_df2$trial_time <- paste(compounds_table_df2$trial,compounds_table_df2$sampling_time,sep="_")
compounds_table_df2$trial_time <- as.factor(compounds_table_df2$trial_time)
compounds_table_df2$trial_time <- factor(compounds_table_df2$trial_time, levels=c("CA_7","CB_7","CA_21","CB_21","CA_35","CB_35","CC_7","CC_21","CC_35"))
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
compounds_table_df2$MCI <- log(compounds_table_df2$MCI)
compounds_table_df2$MCI[which(!is.finite(compounds_table_df2$MCI))] <- 0
max=max(compounds_table_df2$MCI)
min=min(compounds_table_df2$MCI)
ggplot(compounds_table_df2, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(min,max), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#Prepare input table
compounds_table_df <- melt(distilled_expression_caecum_merged_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df$Samples <- gsub("F1a","",compounds_table_df$Samples)
compounds_table_df2 <- merge(compounds_table_df,unique(pathway_table[,c("Compound","Function")]),by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
compounds_table_df2$trial_time <- paste(compounds_table_df2$trial,compounds_table_df2$sampling_time,sep="_")
compounds_table_df2$trial_time <- as.factor(compounds_table_df2$trial_time)
compounds_table_df2$trial_time <- factor(compounds_table_df2$trial_time, levels=c("CA_7","CB_7","CA_21","CB_21","CA_35","CB_35","CC_7","CC_21","CC_35"))
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
compounds_table_df2$MCI <- log(compounds_table_df2$MCI)
compounds_table_df2$MCI[which(!is.finite(compounds_table_df2$MCI))] <- NA
max=max(compounds_table_df2$MCI)
min=min(compounds_table_df2$MCI)
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(min,max), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
head(distilled_expression_caecum)
distilled_expression_caecum <- lapply(distilled_expression_caecum,function(x)x[roenames(x) %in% c("CA13.10","CB08.12","CB16.07","CB16.17","CA12.02","CC10.06","CC24.03","CB09.12"),])
distilled_expression_caecum_selection <- lapply(distilled_expression_caecum,function(x)x[rownames(x) %in% c("CA13.10","CB08.12","CB16.07","CB16.17","CA12.02","CC10.06","CC24.03","CB09.12"),])
head(distilled_expression_caecum_selection)
distilled_expression_caecum_selection <- lapply(distilled_expression_caecum,function(x)x[rownames(x) %in% c("CA13.10F1a","CB08.12F1a","CB16.07F1a","CB16.17F1a","CA12.02F1a","CC10.06F1a","CC24.03F1a","CB09.12F1a"),])
head(distilled_expression_caecum_selection)
distilled_expression_caecum <- c(distilled_expression_caecum_1,distilled_expression_caecum_2,distilled_expression_caecum_3,distilled_expression_caecum_4,distilled_expression_caecum_5,distilled_expression_caecum_6,distilled_expression_caecum_7,distilled_expression_caecum_8)
distilled_expression_caecum_selection <- lapply(distilled_expression_caecum,function(x)x[rownames(x) %in% c("CA13.10F1a","CB08.12F1a","CB16.07F1a","CB16.17F1a","CA12.02F1a","CC10.06F1a","CC24.03F1a","CB09.12F1a"),])
#Merge all MAGs
distilled_expression_caecum_merged <- Reduce("+", distilled_expression_caecum_selection)
distilled_expression_caecum_merged_compounds <- damma_compounds(distilled_expression_caecum_merged,pathway_table)
distilled_expression_caecum_merged_compounds <- distilled_expression_caecum_merged_compounds[sort(rownames(distilled_expression_caecum_merged_compounds)),]
#Heatmap
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(distilled_expression_caecum_merged_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df$Samples <- gsub("F1a","",compounds_table_df$Samples)
compounds_table_df2 <- merge(compounds_table_df,unique(pathway_table[,c("Compound","Function")]),by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
compounds_table_df2$trial_time <- paste(compounds_table_df2$trial,compounds_table_df2$sampling_time,sep="_")
compounds_table_df2$trial_time <- as.factor(compounds_table_df2$trial_time)
compounds_table_df2$trial_time <- factor(compounds_table_df2$trial_time, levels=c("CA_7","CB_7","CA_21","CB_21","CA_35","CB_35","CC_7","CC_21","CC_35"))
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
compounds_table_df2$MCI <- log(compounds_table_df2$MCI)
compounds_table_df2$MCI[which(!is.finite(compounds_table_df2$MCI))] <- NA
max=max(compounds_table_df2$MCI)
min=min(compounds_table_df2$MCI)
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(min,max), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#Merge all MAGs
distilled_expression_caecum_merged <- Reduce("+", distilled_expression_caecum)
#Aggregate to compounds
distilled_expression_caecum_merged_compounds <- damma_compounds(distilled_expression_caecum_merged,pathway_table)
distilled_expression_caecum_merged_compounds <- distilled_expression_caecum_merged_compounds[sort(rownames(distilled_expression_caecum_merged_compounds)),]
#Heatmap
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(distilled_expression_caecum_merged_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df$Samples <- gsub("F1a","",compounds_table_df$Samples)
compounds_table_df2 <- merge(compounds_table_df,unique(pathway_table[,c("Compound","Function")]),by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
compounds_table_df2$trial_time <- paste(compounds_table_df2$trial,compounds_table_df2$sampling_time,sep="_")
compounds_table_df2$trial_time <- as.factor(compounds_table_df2$trial_time)
compounds_table_df2$trial_time <- factor(compounds_table_df2$trial_time, levels=c("CA_7","CB_7","CA_21","CB_21","CA_35","CB_35","CC_7","CC_21","CC_35"))
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
compounds_table_df2$MCI <- log(compounds_table_df2$MCI)
compounds_table_df2$MCI[which(!is.finite(compounds_table_df2$MCI))] <- NA
max=max(compounds_table_df2$MCI)
min=min(compounds_table_df2$MCI)
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(min,max), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
distilled_expression_caecum <- c(distilled_expression_caecum_1,distilled_expression_caecum_2,distilled_expression_caecum_3,distilled_expression_caecum_4,distilled_expression_caecum_5,distilled_expression_caecum_6,distilled_expression_caecum_7,distilled_expression_caecum_8)
distilled_expression_caecum_selection <- lapply(distilled_expression_caecum,function(x)x[rownames(x) %in% c("CA13.10F1a","CB08.12F1a","CB24.14F1a","CB16.17F1a","CC14.05F1a","CC10.06F1a","CC24.03F1a","CC19.05F1a"),])
#Merge all MAGs
distilled_expression_caecum_merged <- Reduce("+", distilled_expression_caecum_selection)
distilled_expression_caecum_merged_compounds <- damma_compounds(distilled_expression_caecum_merged,pathway_table)
distilled_expression_caecum_merged_compounds <- distilled_expression_caecum_merged_compounds[sort(rownames(distilled_expression_caecum_merged_compounds)),]
#Heatmap
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(distilled_expression_caecum_merged_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df$Samples <- gsub("F1a","",compounds_table_df$Samples)
compounds_table_df2 <- merge(compounds_table_df,unique(pathway_table[,c("Compound","Function")]),by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
compounds_table_df2$trial_time <- paste(compounds_table_df2$trial,compounds_table_df2$sampling_time,sep="_")
compounds_table_df2$trial_time <- as.factor(compounds_table_df2$trial_time)
compounds_table_df2$trial_time <- factor(compounds_table_df2$trial_time, levels=c("CA_7","CB_7","CA_21","CB_21","CA_35","CB_35","CC_7","CC_21","CC_35"))
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
compounds_table_df2$MCI <- log(compounds_table_df2$MCI)
compounds_table_df2$MCI[which(!is.finite(compounds_table_df2$MCI))] <- NA
max=max(compounds_table_df2$MCI)
min=min(compounds_table_df2$MCI)
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(min,max), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
distilled_expression_caecum_selection
distilled_expression_caecum_selection_agg <- lapply(distilled_expression_caecum,function(x)colSums(x))
distilled_expression_caecum_selection_agg
distilled_expression_caecum_selection_agg <- lapply(distilled_expression_caecum,function(x)sum(colSums(x)))
distilled_expression_caecum_selection_agg
distilled_expression_caecum_selection_agg <- lapply(distilled_expression_caecum,function(x)sum(colSums(x),na.rm=T))
distilled_expression_caecum_selection_agg
unlist(lapply(distilled_expression_caecum,function(x)sum(colSums(x),na.rm=T)))
distilled_expression_caecum_selection_rank <- sort(unlist(lapply(distilled_expression_caecum,function(x)sum(colSums(x),na.rm=T))))
head(distilled_expression_caecum_selection_rank)
distilled_expression_caecum_selection_rank <- sort(unlist(lapply(distilled_expression_caecum,function(x)sum(colSums(x),na.rm=T))),decreasing=T)
head(distilled_expression_caecum_selection_rank)
names(head(distilled_expression_caecum_selection_rank))
distilled_expression_caecum_selection2 <- distilled_expression_caecum_selection[names(head(distilled_expression_caecum_selection_rank,10))]
distilled_expression_caecum_selection2
length(distilled_expression_caecum_selection2)
#Merge all MAGs
distilled_expression_caecum_merged <- Reduce("+", distilled_expression_caecum_selection)
distilled_expression_caecum_merged_compounds <- damma_compounds(distilled_expression_caecum_merged,pathway_table)
distilled_expression_caecum_merged_compounds <- distilled_expression_caecum_merged_compounds[sort(rownames(distilled_expression_caecum_merged_compounds)),]
#Heatmap
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(distilled_expression_caecum_merged_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df$Samples <- gsub("F1a","",compounds_table_df$Samples)
compounds_table_df2 <- merge(compounds_table_df,unique(pathway_table[,c("Compound","Function")]),by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
compounds_table_df2$trial_time <- paste(compounds_table_df2$trial,compounds_table_df2$sampling_time,sep="_")
compounds_table_df2$trial_time <- as.factor(compounds_table_df2$trial_time)
compounds_table_df2$trial_time <- factor(compounds_table_df2$trial_time, levels=c("CA_7","CB_7","CA_21","CB_21","CA_35","CB_35","CC_7","CC_21","CC_35"))
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
compounds_table_df2$MCI <- log(compounds_table_df2$MCI)
compounds_table_df2$MCI[which(!is.finite(compounds_table_df2$MCI))] <- NA
max=max(compounds_table_df2$MCI)
min=min(compounds_table_df2$MCI)
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(min,max), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
head(distilled_expression_caecum_selection_rank,10)
gene_expression <- fread("gene_expression_caecum.tsv")
gene_expression
gene_expression_sub <- gene_expression[gene_expression$MAG %in% c("ERR4968602_bin.25","ERR4303198bin.17","ERR4836908_bin.60","ERR4968581_bin.26","ERR4336989bin.33","ERR4304580bin.90","ERR4303151bin.35","ERR4836887_bin.54","ERR4968597_bin.38","ERR4836960_bin.14")]
gene_expression_sub
unique(gene_expression_sub$Genus)
unique(gene_expression_sub$bin_completeness)
gene_expression_sub <- gene_expression_sub[,c("Contig","CA13.10","CB08.12","CB24.14","CB16.17","CC14.05","CC10.06","CC24.03","CC19.05")]
gene_expression_sub <- gene_expression_sub[,c("Contig","CA13.10F1a","CB08.12F1a","CB24.14F1a","CB16.17F1a","CC14.05F1a","CC10.06F1a","CC24.03F1a","CC19.05F1a")]
head(gene_expression_sub)
tail(gene_expression_sub)
write.table(gene_expression_sub,"/Users/anttonalberdi/github/DAMMA/data/gene_expression.tsv",quotes=FALSE,row.names=FALSE,col.names=TRUE)
write.table(gene_expression_sub,"/Users/anttonalberdi/github/DAMMA/data/gene_expression.tsv",quote=FALSE,row.names=FALSE,col.names=TRUE)
annotations_file="/Users/anttonalberdi/github/holofood_damma_metagenomics/annotations_caecum.tsv"
annotations <- fread(annotations_file)
annotations
annotations_sub <- annotations[annotations$fasta %in% c("ERR4968602_bin.25","ERR4303198bin.17","ERR4836908_bin.60","ERR4968581_bin.26","ERR4336989bin.33","ERR4304580bin.90","ERR4303151bin.35","ERR4836887_bin.54","ERR4968597_bin.38","ERR4836960_bin.14"),]
annotations_sub
write.table(gene_expression_sub,"/Users/anttonalberdi/github/DAMMA/data/genome_annotations.tsv",quote=FALSE,row.names=FALSE,col.names=TRUE)
write.table(annotations_sub,"/Users/anttonalberdi/github/DAMMA/data/genome_annotations.tsv",quote=FALSE,row.names=FALSE,col.names=TRUE)
write.table(gene_expression_sub,"/Users/anttonalberdi/github/DAMMA/data/gene_expression.tsv",quote=FALSE,row.names=FALSE,col.names=TRUE)
relabun_caecum <- read.table("/Users/anttonalberdi/github/holofood_damma_metagenomics/relabun_AB_caecum.tsv",row.names=1,header=T)
head(relabun_caecum)
relabun_caecum_sub <- relabun_caecum[c("ERR4968602_bin.25","ERR4303198bin.17","ERR4836908_bin.60","ERR4968581_bin.26","ERR4336989bin.33","ERR4304580bin.90","ERR4303151bin.35","ERR4836887_bin.54","ERR4968597_bin.38","ERR4836960_bin.14"),c("CA13.10","CB08.12","CB24.14","CB16.17","CC14.05","CC10.06","CC24.03","CC19.05")]
rownames(relabun_caecum)
ERR4836908_bin.60
relabun_caecum_sub <- relabun_caecum[c("ERR4968602_bin.25","ERR4303198bin.17","ERR4836908_bin.60","ERR4968581_bin.26","ERR4336989bin.33","ERR4304580bin.90","ERR4303151bin.35","ERR4836887_bin.54","ERR4968597_bin.38","ERR4836960_bin.14"),c("CA13.10","CB08.12","CB24.14","CB16.17","CC14.05","CC10.06","CC24.03","CC19.05")]
rownames(relabun_caecum)
colnames(relabun_caecum)
distilled_expression_caecum <- c(distilled_expression_caecum_1,distilled_expression_caecum_2,distilled_expression_caecum_3,distilled_expression_caecum_4,distilled_expression_caecum_5,distilled_expression_caecum_6,distilled_expression_caecum_7,distilled_expression_caecum_8)
distilled_expression_caecum_selection <- lapply(distilled_expression_caecum,function(x)x[rownames(x) %in% c("CA13.10F1a","CB08.12F1a","CB24.14F1a","CB16.17F1a","CC14.05F1a","CC10.06F1a","CC24.03F1a","CC19.05F1a"),])
#Identify most expressed MAGs
distilled_expression_caecum_selection_rank <- sort(unlist(lapply(distilled_expression_caecum,function(x)sum(colSums(x),na.rm=T))),decreasing=T)
#Subset MAGs
distilled_expression_caecum_selection2 <- distilled_expression_caecum_selection[names(head(distilled_expression_caecum_selection_rank,10))]
#Merge all MAGs
distilled_expression_caecum_merged <- Reduce("+", distilled_expression_caecum_selection)
distilled_expression_caecum_merged_compounds <- damma_compounds(distilled_expression_caecum_merged,pathway_table)
distilled_expression_caecum_merged_compounds <- distilled_expression_caecum_merged_compounds[sort(rownames(distilled_expression_caecum_merged_compounds)),]
#Heatmap
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(distilled_expression_caecum_merged_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df$Samples <- gsub("F1a","",compounds_table_df$Samples)
compounds_table_df2 <- merge(compounds_table_df,unique(pathway_table[,c("Compound","Function")]),by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
compounds_table_df2$trial_time <- paste(compounds_table_df2$trial,compounds_table_df2$sampling_time,sep="_")
compounds_table_df2$trial_time <- as.factor(compounds_table_df2$trial_time)
compounds_table_df2$trial_time <- factor(compounds_table_df2$trial_time, levels=c("CA_7","CB_7","CA_21","CB_21","CA_35","CB_35","CC_7","CC_21","CC_35"))
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
compounds_table_df2$MCI <- log(compounds_table_df2$MCI)
compounds_table_df2$MCI[which(!is.finite(compounds_table_df2$MCI))] <- NA
max=max(compounds_table_df2$MCI)
min=min(compounds_table_df2$MCI)
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(min,max), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
distilled_expression_caecum <- c(distilled_expression_caecum_1,distilled_expression_caecum_2,distilled_expression_caecum_3,distilled_expression_caecum_4,distilled_expression_caecum_5,distilled_expression_caecum_6,distilled_expression_caecum_7,distilled_expression_caecum_8)
######
# Aggregated community
######
#Merge all MAGs
distilled_expression_caecum_merged <- Reduce("+", distilled_expression_caecum)
#Aggregate to compounds
distilled_expression_caecum_merged_compounds <- damma_compounds(distilled_expression_caecum_merged,pathway_table)
distilled_expression_caecum_merged_compounds <- distilled_expression_caecum_merged_compounds[sort(rownames(distilled_expression_caecum_merged_compounds)),]
#Heatmap
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(distilled_expression_caecum_merged_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df$Samples <- gsub("F1a","",compounds_table_df$Samples)
compounds_table_df2 <- merge(compounds_table_df,unique(pathway_table[,c("Compound","Function")]),by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
compounds_table_df2$trial_time <- paste(compounds_table_df2$trial,compounds_table_df2$sampling_time,sep="_")
compounds_table_df2$trial_time <- as.factor(compounds_table_df2$trial_time)
compounds_table_df2$trial_time <- factor(compounds_table_df2$trial_time, levels=c("CA_7","CB_7","CA_21","CB_21","CA_35","CB_35","CC_7","CC_21","CC_35"))
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
compounds_table_df2$MCI <- log(compounds_table_df2$MCI)
compounds_table_df2$MCI[which(!is.finite(compounds_table_df2$MCI))] <- NA
max=max(compounds_table_df2$MCI)
min=min(compounds_table_df2$MCI)
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(min,max), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
load("distilled_caecum_1.RData")
load("distilled_caecum_2.RData")
load("distilled_caecum_3.RData")
load("distilled_caecum_4.RData")
load("distilled_caecum_5.RData")
load("distilled_caecum_6.RData")
load("distilled_caecum_7.RData")
load("distilled_caecum_8.RData")
distilled_expression_caecum <- c(distilled_expression_caecum_1,distilled_expression_caecum_2,distilled_expression_caecum_3,distilled_expression_caecum_4,distilled_expression_caecum_5,distilled_expression_caecum_6,distilled_expression_caecum_7,distilled_expression_caecum_8)
distilled_expression_caecum_selection <- lapply(distilled_expression_caecum,function(x)x[rownames(x) %in% c("CA11.08F1a","CB08.12F1a","CB24.14F1a","CB16.17F1a","CC14.05F1a","CC10.06F1a","CC24.03F1a","CC19.05F1a"),])
#Identify most expressed MAGs
distilled_expression_caecum_selection_rank <- sort(unlist(lapply(distilled_expression_caecum,function(x)sum(colSums(x),na.rm=T))),decreasing=T)
#Subset MAGs
distilled_expression_caecum_selection2 <- distilled_expression_caecum_selection[names(head(distilled_expression_caecum_selection_rank,10))]
#Merge all MAGs
distilled_expression_caecum_merged <- Reduce("+", distilled_expression_caecum_selection)
distilled_expression_caecum_merged_compounds <- damma_compounds(distilled_expression_caecum_merged,pathway_table)
distilled_expression_caecum_merged_compounds <- distilled_expression_caecum_merged_compounds[sort(rownames(distilled_expression_caecum_merged_compounds)),]
#Heatmap
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(distilled_expression_caecum_merged_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df$Samples <- gsub("F1a","",compounds_table_df$Samples)
compounds_table_df2 <- merge(compounds_table_df,unique(pathway_table[,c("Compound","Function")]),by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
compounds_table_df2$trial_time <- paste(compounds_table_df2$trial,compounds_table_df2$sampling_time,sep="_")
compounds_table_df2$trial_time <- as.factor(compounds_table_df2$trial_time)
compounds_table_df2$trial_time <- factor(compounds_table_df2$trial_time, levels=c("CA_7","CB_7","CA_21","CB_21","CA_35","CB_35","CC_7","CC_21","CC_35"))
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
compounds_table_df2$MCI <- log(compounds_table_df2$MCI)
compounds_table_df2$MCI[which(!is.finite(compounds_table_df2$MCI))] <- NA
max=max(compounds_table_df2$MCI)
min=min(compounds_table_df2$MCI)
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(min,max), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
gene_expression <- fread("gene_expression_caecum.tsv")
gene_expression_sub <- gene_expression[gene_expression$MAG %in% c("ERR4968602_bin.25","ERR4303198bin.17","ERR4836908_bin.60","ERR4968581_bin.26","ERR4336989bin.33","ERR4304580bin.90","ERR4303151bin.35","ERR4836887_bin.54","ERR4968597_bin.38","ERR4836960_bin.14")]
gene_expression_sub <- gene_expression_sub[,c("Contig","CA11.08F1a","CB08.12F1a","CB24.14F1a","CB16.17F1a","CC14.05F1a","CC10.06F1a","CC24.03F1a","CC19.05F1a")]
write.table(gene_expression_sub,"/Users/anttonalberdi/github/DAMMA/data/gene_expression.tsv",quote=FALSE,row.names=FALSE,col.names=TRUE)
relabun_caecum <- read.table("/Users/anttonalberdi/github/holofood_damma_metagenomics/relabun_ABC_caecum.tsv",row.names=1,header=T)
relabun_AB_caecum <- read.table("/Users/anttonalberdi/github/holofood_damma_metagenomics/relabun_AB_caecum.tsv",row.names=1,header=T)
relabun_C_caecum <- read.table("/Users/anttonalberdi/github/holofood_damma_metagenomics/relabun_C_caecum.tsv",row.names=1,header=T)
relabun_caecum <- cbind(relabun_AB_caecum,relabun_C_caecum)
relabun_caecum_sub <- relabun_caecum[c("ERR4968602_bin.25","ERR4303198bin.17","ERR4836908_bin.60","ERR4968581_bin.26","ERR4336989bin.33","ERR4304580bin.90","ERR4303151bin.35","ERR4836887_bin.54","ERR4968597_bin.38","ERR4836960_bin.14"),c("CA11.08","CB08.12","CB24.14","CB16.17","CC14.05","CC10.06","CC24.03","CC19.05")]
head(relabun_caecum_sub)
colSums(relabun_caecum_sub)
relabun_caecum_sub <- tss(relabun_caecum_sub)
library(hilldiv)
relabun_caecum_sub <- tss(relabun_caecum_sub)
colSums(relabun_caecum_sub)
head(relabun_caecum_sub)
write.table(relabun_caecum_sub,"/Users/anttonalberdi/github/DAMMA/data/genome_counts.tsv",quote=FALSE,row.names=TRUE,col.names=TRUE)
gene_expression_sub
gene_expression
gene_expression_sub <- gene_expression[gene_expression$MAG %in% c("ERR4968602_bin.25","ERR4303198bin.17","ERR4836908_bin.60","ERR4968581_bin.26","ERR4336989bin.33","ERR4304580bin.90","ERR4303151bin.35","ERR4836887_bin.54","ERR4968597_bin.38","ERR4836960_bin.14")]
gene_expression_sub <- unique(gene_expression_sub[,c("MAG","bin_completeness","bin_contamination")])
gene_expression_sub
write.table(gene_expression_sub,"/Users/anttonalberdi/github/DAMMA/data/genome_quality.tsv",quote=FALSE,row.names=FALSE,col.names=TRUE)
gene_expression_sub <- unique(gene_expression_sub[,c("MAG","bin_completeness","bin_contamination","Genus")])
annotations_file="/Users/anttonalberdi/github/holofood_damma_metagenomics/annotations_caecum.tsv"
annotations <- fread(annotations_file)
annotations_sub <- annotations[annotations$fasta %in% c("ERR4968602_bin.25","ERR4303198bin.17","ERR4836908_bin.60","ERR4968581_bin.26","ERR4336989bin.33","ERR4304580bin.90","ERR4303151bin.35","ERR4836887_bin.54","ERR4968597_bin.38","ERR4836960_bin.14"),]
write.table(annotations_sub,"/Users/anttonalberdi/github/DAMMA/data/genome_annotations.tsv",quote=FALSE,row.names=FALSE,col.names=TRUE,sep="\t")
