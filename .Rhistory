dim(betadiv_N_caecum)
load("betadiv_F_caecum.Rdata")
head(betadiv_F_caecum)
betadiv_F_caecum
betadiv_func
betadiv_F_caecum <- betadiv_func
save(betadiv_F_caecum,file="betadiv_F_caecum.Rdata")
load("betadiv_F_caecum.Rdata")
betadiv_F_caecum
setwd("/Users/anttonalberdi/Downloads/HoloFood_NormalDev_diversities")
library(ape)
library(hillR)
library(spaa)
metadata <- read.table("metadata.tsv",header=T,row.names=1,sep="\t")
ileum_counts <- read.table("relabun_AB_ileum.tsv",header=T,row.names=1,sep="\t")
#Neutral
betadiv_neutral <- hill_taxa_parti_pairwise(t(ileum_counts), q = 1, show_warning = FALSE, .progress = FALSE)
save(betadiv_neutral,file="betadiv_N_ileum.Rdata")
load("betadiv_N_ileum.Rdata")
betadiv_N_ileum_dist <- list2dist(as.data.frame(betadiv_N_ileum[,c("site1","site2","local_similarity")]))
write.table(betadiv_N_ileum_dist,"betadiv_N_ileum.tsv",sep="\t",row.names=T,col.nnames=T)
#Phylogenetic
ileum_tree <- read.tree("gtdbtk.bac120.classify_ileum.tree")
mags <- rownames(ileum_counts)
mags <- mags[mags %in% ileum_tree$tip.label]
ileum_tree <- keep.tip(ileum_tree, mags)
#Error in keep.tip(ileum_tree, mags) : unmatched tip labels:
#ERR4336989bin.74 ERR4836937_bin.24 ERR4968579_bin.26
ileum_counts_sub <- ileum_counts[rownames(ileum_counts) %in% ileum_tree$tip.label,]
betadiv_phylo <- hill_phylo_parti_pairwise(comm=t(ileum_counts_sub), tree=ileum_tree, q = 1)
save(betadiv_phylo,file="betadiv_P_ileum.Rdata")
load("betadiv_P_ileum.Rdata")
betadiv_P_ileum_dist <- list2dist(as.data.frame(betadiv_P_ileum[,c("site1","site2","local_similarity")]))
write.table(betadiv_P_ileum_dist,"betadiv_P_ileum.tsv",sep="\t",row.names=T,col.nnames=T)
#Functional
ileum_function <- read.table("annotations_ileum_keggmodules.tsv",header=T,row.names=1,sep="\t")[,c(1:380)]
betadiv_F_ileum <- hill_func_parti_pairwise(t(ileum_counts), ileum_function, q = 1)
save(betadiv_F_ileum,file="betadiv_F_ileum.Rdata")
#Merge all with metadata
div_all <- cbind(N=div_neutral,P=div_phylo,F=div_func[1,])
div_all <- merge(div_all, metadata, by="row.names")
div_all$sampling_time <- as.factor(as.character(div_all$sampling_time))
div_all$sampling_time <- factor(div_all$sampling_time, levels = c("7", "21", "35"))
save(div_all,file="div_all_ileum.Rdata")
load("betadiv_F_ileum.Rdata")
betadiv_F_ileum_dist <- list2dist(as.data.frame(betadiv_F_ileum[,c("site1","site2","local_similarity")]))
write.table(betadiv_F_ileum_dist,"betadiv_F_ileum.tsv",sep="\t",row.names=T,col.nnames=T)
#Neutral
betadiv_N_ileum <- hill_taxa_parti_pairwise(t(ileum_counts), q = 1, show_warning = FALSE, .progress = FALSE)
save(betadiv_N_ileum,file="betadiv_N_ileum.Rdata")
#Phylogenetic
ileum_tree <- read.tree("gtdbtk.bac120.classify_ileum.tree")
mags <- rownames(ileum_counts)
mags <- mags[mags %in% ileum_tree$tip.label]
ileum_tree <- keep.tip(ileum_tree, mags)
#Error in keep.tip(ileum_tree, mags) : unmatched tip labels:
#ERR4336989bin.74 ERR4836937_bin.24 ERR4968579_bin.26
ileum_counts_sub <- ileum_counts[rownames(ileum_counts) %in% ileum_tree$tip.label,]
betadiv_P_ileum <- hill_phylo_parti_pairwise(comm=t(ileum_counts_sub), tree=ileum_tree, q = 1)
save(betadiv_P_ileum,file="betadiv_P_ileum.Rdata")
#Functional
ileum_function <- read.table("annotations_ileum_keggmodules.tsv",header=T,row.names=1,sep="\t")[,c(1:380)]
betadiv_F_ileum <- hill_func_parti_pairwise(t(ileum_counts), ileum_function, q = 1)
save(betadiv_F_ileum,file="betadiv_F_ileum.Rdata")
setwd("/Users/anttonalberdi/github/holofood_damma_metagenomics/")
library(data.table)
library(devtools)
#library(DAMMA)
load_all('/Users/anttonalberdi/github/DAMMA')
load("MCI_community_AB_caecum.tsv")
compounds_table_df <- melt(MCI_community_AB_caecum)
load("MCI_community_AB_caecum.RData")
compounds_table_df <- melt(MCI_community_AB_caecum)
load("community_AB_caecum.RData")
compounds_table_df <- melt(MCI_community_AB_caecum)
load("community_AB_caecum.RData")
compounds_table_df <- melt(community_AB_caecum)
load("community_AB_caecum.RData")
compounds_table_df <- melt(community_MCI_caecum_compounds)
load("community_AB_caecum.RData")
View(community_MCI_AB_caecum)
compounds_table_df <- melt(community_MCI_AB_caecum)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
head(compounds_table_df)
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
head(compounds_table_df2)
head(pathway_table)
compounds_table_df <- melt(community_MCI_AB_caecum)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
head(compounds_table_df2)
head(compounds_table_df)
community_MCI_AB_caecum_compounds <- damma_compounds(community_MCI_AB_caecum,pathway_table)
compounds_table_df <- melt(community_MCI_AB_caecum_compounds)
head(compounds_table_df)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
head(compounds_table_df2)
metadata <- read.table("/Users/anttonalberdi/github/holofood_damma/metadata.tsv",row.names=1,header=T)
metadata <- read.table("metadata.tsv",row.names=1,header=T)
head(metadata)
community_MCI_AB_caecum_compounds <- damma_compounds(community_MCI_AB_caecum,pathway_table)
compounds_table_df <- melt(community_MCI_AB_caecum_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
compounds_table_df2$sampling_time <- as.factor(compounds_table_df2$sampling_time)
compounds_table_df2$sampling_time <- factor(compounds_table_df2$sampling_time, levels=c("7","21","35"))
head(compounds_table_df2)
library(data.table)
library(ggplot2)
library(RColorBrewer)
ggplot(compounds_table_df2, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
facet_grid(. ~ sampling_time, scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0))
ggplot(compounds_table_df2, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ sampling_time, scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0))
filtering_compounds <- c("D-Apiose","Lactose","Troponin","Tropomyosin","Keratin","Collagen","Actin","Albumin","Isolithocholate","Isodeoxycholate","LCA","DCA","UDCA","GABA","Glutamate","Putrescine","Creatine","Ubiquinone (Q10)","Menaquinone (K2)","Phylloquinone (K1)","Tocopherol/tocoterienol (E)")
compounds_table_df3 <- compounds_table_df2[! compounds_table_df2$Compounds %in% filtering_compounds]
compounds_table_df3 <- compounds_table_df2[!compounds_table_df2$Compounds %in% filtering_compounds,]
ggplot(compounds_table_df3, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ sampling_time, scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0))
#Filtering
filtering_compounds <- c("D-Apiose","Lactose","Troponin","Tropomyosin","Keratin","Collagen","Actin","Albumin","Isolithocholate","Isodeoxycholate","LCA","DCA","UDCA","GABA","Glutamate","Putrescine","Creatine","Betaine","Choline","Ubiquinone (Q10)","Menaquinone (K2)","Phylloquinone (K1)","Tocopherol/tocotorienol (E)")
compounds_table_df3 <- compounds_table_df2[!compounds_table_df2$Compounds %in% filtering_compounds,]
#Plot heatmap
ggplot(compounds_table_df3, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ sampling_time, scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0))
ggplot(compounds_table_df3, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ sampling_time, scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.title.x=element_blank())
ggplot(compounds_table_df3, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ sampling_time, scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
load("community_AB_caecum.RData")
community_MCI_AB_caecum_compounds <- damma_compounds(community_MCI_AB_caecum,pathway_table)
head(community_MCI_AB_caecum_compounds)
community_MCI_AB_caecum_compounds <- damma_compounds(community_MCI_AB_caecum,pathway_table)
compounds_table_df <- melt(community_MCI_AB_caecum_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
head(compounds_table_df2)
summary_MCI <- aggregate(compounds_table_df2$MCI,by=list("sampling_time","Compounds"),FUN=mean)
summary_MCI <- aggregate(compounds_table_df2$MCI,by=list(ompounds_table_df2$sampling_time,ompounds_table_df2$Compounds),FUN=mean)
community_MCI_AB_caecum_compounds <- damma_compounds(community_MCI_AB_caecum,pathway_table)
compounds_table_df <- melt(community_MCI_AB_caecum_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
summary_MCI <- aggregate(compounds_table_df2$MCI,by=list(ompounds_table_df2$sampling_time,ompounds_table_df2$Compounds),FUN=mean)
summary_MCI <- aggregate(compounds_table_df2$MCI,by=list(compounds_table_df2$sampling_time,compounds_table_df2$Compounds),FUN=mean)
summary_MCI
summary_MCI <- aggregate(compounds_table_df2$MCI,by=list(compounds_table_df2$sampling_time),FUN=mean)
summary_MCI
aggregate(compounds_table_df2$MCI,by=list(compounds_table_df2$sampling_time),FUN=sd)
head(summary_MCI)
summary_MCI <- aggregate(compounds_table_df2$MCI,by=list(compounds_table_df2$sampling_time,compounds_table_df2$Compounds),FUN=mean)
head(summary_MCI)
aggregate(compounds_table_df2$MCI,by=list(compounds_table_df2$sampling_time),FUN = function(x) c(mean = mean(x), se = std.error(x)))
compounds_table_df2 %>%
group_by(sampling_time) %>%
summarise(mean = mean(MCI),
std = se(MCI))
compounds_table_df2 %>%
group_by(sampling_time) %>%
summarise(mean = mean(MCI),
std = se(MCI))
compounds_table_df2 %>%
group_by(sampling_time) %>%
summarise(mean = mean(MCI),
std = sd(MCI))
compounds_table_df2 %>%
group_by(sampling_time, Compounds) %>%
summarise(mean = mean(MCI), std = sd(MCI))
head(compounds_table_df2)
compounds_table_df2 %>%
group_by(sampling_time, Function) %>%
summarise(mean = mean(MCI), std = sd(MCI))
compound_stats <- compounds_table_df2 %>%
group_by(sampling_time, Function) %>%
summarise(mean = mean(MCI), std = sd(MCI))
compound_stats
compounds_table_df2 %>%
group_by(sampling_time, Function) %>%
summarise(mean = mean(MCI), std = sd(MCI), se = sd / sqrt(MCI))
compounds_table_df2 %>%
group_by(sampling_time, Function) %>%
summarise(mean = mean(MCI), std = sd(MCI), n = n(), se = sd / sqrt(n))
compounds_table_df2 %>%
group_by(sampling_time, Function) %>%
summarise(mean = mean(MCI), std = sd(MCI), n = n(), se = std / sqrt(n))
compound_stats <- compounds_table_df2 %>%
group_by(sampling_time, Function) %>%
summarise(mean = mean(MCI), std = sd(MCI), n = n(), se = std / sqrt(n))
ggplot(compound_stats, aes(x=mean, y=Function)+
geom_line()
ggplot(compound_stats, aes(x=mean, y=Function))+
geom_line()
ggplot(compound_stats, aes(x=mean, y=Function, group=sampling_time))+
geom_line()
ggplot(compound_stats, aes(x=mean, y=Function, group=sampling_time))+
geom_boxplot()
ggplot(compound_stats, aes(x=mean, y=sampling_time, group=Function))+
geom_boxplot()
ggplot(compound_stats, aes(x=mean, y=sampling_time))+
geom_boxplot()
ggplot(compound_stats, aes(x=mean, y=sampling_time))+
geom_boxplot() +
facet_grid(Function ~ ., scales = "free", space = "free")
compounds_table_df2 %>%
group_by(sampling_time) %>%
summarise(mean = mean(MCI),
std = sd(MCI))
community_MCI_AB_caecum_compounds <- damma_compounds(community_MCI_AB_ileum,pathway_table)
compounds_table_df <- melt(community_MCI_AB_caecum_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
#Average per time point
compounds_table_df2 %>%
group_by(sampling_time) %>%
summarise(mean = mean(MCI),
std = sd(MCI))
load("community_AB_ileum.RData")
community_MCI_AB_ileum
load("community_AB_ileum.RData")
compounds <- damma_compounds(community_MCI_AB_ileum,pathway_table)
compounds_table_df <- melt(compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
compounds_table_df2 %>%
group_by(sampling_time) %>%
summarise(mean = mean(MCI),
std = sd(MCI))
load("community_AB_caecum.RData")
compounds <- damma_compounds(community_MCI_AB_caecum,pathway_table)
compounds_table_df <- melt(compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
#Average per time point
compounds_table_df2 %>%
group_by(sampling_time) %>%
summarise(mean = mean(MCI),
std = sd(MCI))
compounds_table_df2 %>%
summarise(mean = mean(MCI),
std = sd(MCI))
load("community_AB_ileum.RData")
compounds <- damma_compounds(community_MCI_AB_ileum,pathway_table)
compounds_table_df <- melt(compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
#Average
compounds_table_df2 %>%
summarise(mean = mean(MCI),
std = sd(MCI))
load("community_AB_caecum.RData")
community_MCI_AB_caecum_compounds <- damma_compounds(community_MCI_AB_caecum,pathway_table)
compounds_table_df <- melt(community_MCI_AB_caecum_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
#Average
avg_caecum <- compounds_table_df2 %>%
summarise(mean = mean(MCI),
std = sd(MCI))
#Average per time point
avg_caecum_time <- compounds_table_df2 %>%
group_by(sampling_time) %>%
summarise(mean = mean(MCI),
std = sd(MCI))
load("community_AB_ileum.RData")
community_MCI_AB_caecum_ileum <- damma_compounds(community_MCI_AB_ileum,pathway_table)
compounds_table_df <- melt(community_MCI_AB_caecum_ileum)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
#Average
avg_ileum <- compounds_table_df2 %>%
summarise(mean = mean(MCI),
std = sd(MCI))
#Average per time point
avg_ileum_time <- compounds_table_df2 %>%
group_by(sampling_time) %>%
summarise(mean = mean(MCI),
std = sd(MCI))
avg_caecum_time
head(compounds_table_df2)
compounds_table_df2$MCI
hist(compounds_table_df2$MCI)
hist(compounds_table_df2_ileum$MCI)
community_MCI_AB_caecum_ileum <- damma_compounds(community_MCI_AB_ileum,pathway_table)
compounds_table_df <- melt(community_MCI_AB_caecum_ileum)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2_ileum <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
hist(compounds_table_df2_ileum$MCI)
hist(compounds_table_df2_caecum$MCI)
compounds_table_df2_caecum <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
hist(compounds_table_df2_caecum$MCI)
community_MCI_AB_caecum_compounds <- damma_compounds(community_MCI_AB_caecum,pathway_table)
compounds_table_df <- melt(community_MCI_AB_caecum_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2_caecum <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
hist(compounds_table_df2_caecum$MCI)
community_MCI_AB_caecum_ileum <- damma_compounds(community_MCI_AB_ileum,pathway_table)
compounds_table_df <- melt(community_MCI_AB_caecum_ileum)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2_ileum <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
hist(compounds_table_df2_ileum$MCI)
hist(compounds_table_df2_caecum$MCI)
load("community_AB_caecum.RData")
community_MCI_AB_caecum_compounds <- damma_compounds(community_MCI_AB_caecum,pathway_table)
compounds_table_df <- melt(community_MCI_AB_caecum_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
compounds_table_df2$sampling_time <- as.factor(compounds_table_df2$sampling_time)
compounds_table_df2$sampling_time <- factor(compounds_table_df2$sampling_time, levels=c("7","21","35"))
#Filtering
filtering_compounds <- c("D-Apiose","Lactose","Troponin","Tropomyosin","Keratin","Collagen","Actin","Albumin","Isolithocholate","Isodeoxycholate","LCA","DCA","UDCA","GABA","Glutamate","Putrescine","Creatine","Betaine","Choline","Ubiquinone (Q10)","Menaquinone (K2)","Phylloquinone (K1)","Tocopherol/tocotorienol (E)")
compounds_table_df3 <- compounds_table_df2[!compounds_table_df2$Compounds %in% filtering_compounds,]
#Plot heatmap
ggplot(compounds_table_df3, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ sampling_time, scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
head(compounds_table_df3)
compounds_table_df3 %>%
group_by(Compounds) %>%
summarise(std = sd(MCI))
compounds_table_df3_sd <- compounds_table_df3 %>%
group_by(Compounds) %>%
summarise(std = sd(MCI))
compounds_table_df3_sd <- compounds_table_df3 %>%
group_by(Compounds) %>%
summarise(std = sd(MCI))
compounds_table_df3 <- merge(compounds_table_df2,compounds_table_df3_sd,by="Compounds")
head(compounds_table_df3)
compounds_table_df3$Compounds_norm <- compounds_table_df3$Compounds / compounds_table_df3$std
compounds_table_df3$Compounds_norm <- compounds_table_df3$MCI / compounds_table_df3$std
head(compounds_table_df3)
community_MCI_AB_caecum_compounds <- damma_compounds(community_MCI_AB_caecum,pathway_table)
compounds_table_df <- melt(community_MCI_AB_caecum_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
compounds_table_df2$sampling_time <- as.factor(compounds_table_df2$sampling_time)
compounds_table_df2$sampling_time <- factor(compounds_table_df2$sampling_time, levels=c("7","21","35"))
#Filtering
filtering_compounds <- c("D-Apiose","Lactose","Troponin","Tropomyosin","Keratin","Collagen","Actin","Albumin","Isolithocholate","Isodeoxycholate","LCA","DCA","UDCA","GABA","Glutamate","Putrescine","Creatine","Betaine","Choline","Ubiquinone (Q10)","Menaquinone (K2)","Phylloquinone (K1)","Tocopherol/tocotorienol (E)")
compounds_table_df3 <- compounds_table_df2[!compounds_table_df2$Compounds %in% filtering_compounds,]
#Divide by stdv
compounds_table_df3_sd <- compounds_table_df3 %>%
group_by(Compounds) %>%
summarise(std = sd(MCI))
compounds_table_df3 <- merge(compounds_table_df3,compounds_table_df3_sd,by="Compounds")
compounds_table_df3$Compounds_norm <- compounds_table_df3$MCI / compounds_table_df3$std
ggplot(compounds_table_df3, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ sampling_time, scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
compounds_table_df3$MCI_norm <- compounds_table_df3$MCI / compounds_table_df3$std
#Plot heatmap
ggplot(compounds_table_df3, aes(x=Samples, y=Compounds, fill=MCI_norm, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ sampling_time, scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
ggplot(compounds_table_df3, aes(x=Samples, y=Compounds, fill=MCI_norm, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ sampling_time, scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
compounds_table_df3_sd
load("community_AB_caecum.RData")
community_MCI_AB_caecum_compounds <- damma_compounds(community_MCI_AB_caecum,pathway_table)
compounds_table_df <- melt(community_MCI_AB_caecum_compounds)
colnames(compounds_table_df) <- c("Samples","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
metadata <- read.table("metadata.tsv",row.names=1,header=T)
compounds_table_df2 <- merge(compounds_table_df2,metadata,by.x="Samples",by.y="row.names")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
compounds_table_df2$sampling_time <- as.factor(compounds_table_df2$sampling_time)
compounds_table_df2$sampling_time <- factor(compounds_table_df2$sampling_time, levels=c("7","21","35"))
#Filtering
filtering_compounds <- c("D-Apiose","Lactose","Troponin","Tropomyosin","Keratin","Collagen","Actin","Albumin","Isolithocholate","Isodeoxycholate","LCA","DCA","UDCA","GABA","Glutamate","Putrescine","Creatine","Betaine","Choline","Ubiquinone (Q10)","Menaquinone (K2)","Phylloquinone (K1)","Tocopherol/tocotorienol (E)")
compounds_table_df3 <- compounds_table_df2[!compounds_table_df2$Compounds %in% filtering_compounds,]
#Plot heatmap
ggplot(compounds_table_df3, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ sampling_time, scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
ggplot(compounds_table_df3, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ sampling_time, scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
ggplot(compounds_table_df3, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ sampling_time, scales = "free", space = "free",margins = FALSE)+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
pdf("compounds_collapsed.pdf",width=6,height=8)
ggplot(compounds_table_df3, aes(x=Samples, y=Compounds, fill=MCI, group=Function))+
geom_tile(size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ sampling_time, scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
dev.off()
