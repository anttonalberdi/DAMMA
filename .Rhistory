pathway_table_FD7,
file="data/damma_data.RData")
load_all('/Users/anttonalberdi/github/DAMMA')
MCI_table <- damma(gene_annotations,pathway_table_FD7,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table_FD7)
head(pathway_table_FD7)
gene_annotations <- read.table("data/source/gene_annotations.tsv",header=TRUE,sep="\t")
library(gtools)
gene_annotations <- gene_annotations[mixedorder(gene_annotations$genome),]
gene_expression <- read.table("data/source/gene_expression.tsv",header=TRUE,sep="\t",row.names=1)
genome_counts <- read.table("data/source/genome_counts.tsv",header=TRUE,sep="\t",row.names=1)
genome_quality <- read.table("data/source/genome_quality.tsv",header=TRUE,sep="\t")
pathway_table_FD1 <- read.table("data/source/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/source/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/source/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/source/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/source/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/source/DAMMA_db6.tsv",header=TRUE,sep="\t")
pathway_table_FD7 <- read.table("data/source/DAMMA_db7.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
pathway_table_FD7,
file="data/damma_data.RData")
load_all('/Users/anttonalberdi/github/DAMMA')
MCI_table <- damma(gene_annotations,pathway_table_FD7,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table_FD7)
head(MCI_table)
head(pathway_table_FD7)
pathway_table<-pathway_table_FD7
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))) %>%
column_to_rownames('Compound'))
compounds_table <- t(as.data.frame(t(MCI_table))
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code')
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code')
)
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound))
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))))
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))))
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))) %>%
column_to_rownames('Compound'))
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound)))
head(compounds_table)
head(compounds_table)
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code'))
head(compounds_table)
head(t(as.data.frame(t(MCI_table)))
)
load_all('/Users/anttonalberdi/github/DAMMA')
MCI_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
head(MCI_table)
pathway_table=pathway_table_FD6
MCI_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
head(MCI_table)
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table)
head(t(as.data.frame(t(MCI_table)))
)
head(t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code'))
)
head(t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))))
)
head(t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))) %>%
column_to_rownames('Compound')))
MCI_table <- damma(gene_annotations,pathway_table_FD7,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
head(MCI_table)
pathway_table <- pathway_table_FD7
compounds_table <- t(as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))) %>%
column_to_rownames('Compound'))
colnames(pathway_table_FD6)
colnames(pathway_table_FD7)
as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound)))
pathway_table <- pathway_table_FD7
as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))) %>%
column_to_rownames('Compound')
as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound)))
as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code')
as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE)))
as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound)))
as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))) %>%
column_to_rownames('Compound')
cd <- as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound)))
cd
cd$Compound
gene_annotations <- read.table("data/source/gene_annotations.tsv",header=TRUE,sep="\t")
library(gtools)
gene_annotations <- gene_annotations[mixedorder(gene_annotations$genome),]
gene_expression <- read.table("data/source/gene_expression.tsv",header=TRUE,sep="\t",row.names=1)
genome_counts <- read.table("data/source/genome_counts.tsv",header=TRUE,sep="\t",row.names=1)
genome_quality <- read.table("data/source/genome_quality.tsv",header=TRUE,sep="\t")
pathway_table_FD1 <- read.table("data/source/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/source/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/source/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/source/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/source/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/source/DAMMA_db6.tsv",header=TRUE,sep="\t")
pathway_table_FD7 <- read.table("data/source/DAMMA_db7.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
pathway_table_FD7,
file="data/damma_data.RData")
load_all('/Users/anttonalberdi/github/DAMMA')
tail(pathway_table_FD7)
pathway_table=pathway_table_FD7
MCI_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table)
pathway_table
cd <- as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound))) %>%
column_to_rownames('Compound')
cd <- as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound) %>%
summarise(across(where(is.numeric), ~ max(.x, na.rm = TRUE))) %>%
arrange(factor(Compound, levels = unique(pathway_table$Compound)))
cd$Compound
cd <- as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code') %>%
group_by(Compound)
cd
cd$Code
gene_annotations <- read.table("data/source/gene_annotations.tsv",header=TRUE,sep="\t")
library(gtools)
gene_annotations <- gene_annotations[mixedorder(gene_annotations$genome),]
gene_expression <- read.table("data/source/gene_expression.tsv",header=TRUE,sep="\t",row.names=1)
genome_counts <- read.table("data/source/genome_counts.tsv",header=TRUE,sep="\t",row.names=1)
genome_quality <- read.table("data/source/genome_quality.tsv",header=TRUE,sep="\t")
pathway_table_FD1 <- read.table("data/source/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/source/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/source/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/source/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/source/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/source/DAMMA_db6.tsv",header=TRUE,sep="\t")
pathway_table_FD7 <- read.table("data/source/DAMMA_db7.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
pathway_table_FD7,
file="data/damma_data.RData")
load_all('/Users/anttonalberdi/github/DAMMA')
pathway_table=pathway_table_FD7
MCI_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table)
cd <- as.data.frame(t(MCI_table)) %>%
rownames_to_column('Code') %>%
left_join(pathway_table[,c('Code', 'Compound')], by = 'Code')
cd$Code
gene_annotations <- read.table("data/source/gene_annotations.tsv",header=TRUE,sep="\t")
library(gtools)
gene_annotations <- gene_annotations[mixedorder(gene_annotations$genome),]
gene_expression <- read.table("data/source/gene_expression.tsv",header=TRUE,sep="\t",row.names=1)
genome_counts <- read.table("data/source/genome_counts.tsv",header=TRUE,sep="\t",row.names=1)
genome_quality <- read.table("data/source/genome_quality.tsv",header=TRUE,sep="\t")
pathway_table_FD1 <- read.table("data/source/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/source/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/source/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/source/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/source/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/source/DAMMA_db6.tsv",header=TRUE,sep="\t")
pathway_table_FD7 <- read.table("data/source/DAMMA_db7.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
pathway_table_FD7,
file="data/damma_data.RData")
load_all('/Users/anttonalberdi/github/DAMMA')
pathway_table=pathway_table_FD7
MCI_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table)
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(MCI_table_compounds)
colnames(compounds_table_df) <- c("MAGs","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=MAGs, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#Prepare input table
compounds_table_df <- melt(MCI_table_compounds)
colnames(compounds_table_df) <- c("MAGs","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
#Plot heatmap
ggplot(compounds_table_df2, aes(x=MAGs, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
MCI_table <- damma(gene_annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
setwd("/Users/anttonalberdi/github/functional_diversity/")
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
library(data.table)
gene_annotations <- fread("data/annotations1.tsv")
MCI_table <- damma(gene_annotations,pathway_table_FD7,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(MCI_table,"MCI_table1.Rdata")
save(MCI_table,file="MCI_table1.Rdata")
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table)
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(MCI_table_compounds)
colnames(compounds_table_df) <- c("MAGs","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
#Plot heatmap
ggplot(compounds_table_df2, aes(x=MAGs, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
head(MCI_table)
ggplot(compounds_table_df2, aes(x=MAGs, y=Compounds, fill=MCI, group=Function))+
geom_tile()+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
setwd("/Users/anttonalberdi/github/functional_diversity/")
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
library(data.table)
gene_annotations <- fread("data/annotations1.tsv")
MCI_table$D020606
MCI_table[,"D020606"]
load_all('/Users/anttonalberdi/github/DAMMA')
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
gene_annotations <- fread("/Users/anttonalberdi/github/functional_diversity/data/annotations1.tsv")
gene_annotations <- fread("/Users/anttonalberdi/github/functional_diversity/data/annotations1.tsv")
library(data.table)
gene_annotations <- fread("/Users/anttonalberdi/github/functional_diversity/data/annotations1.tsv")
pathway_table<-pathway_table_FD7
annotation_table <- gene_annotations
#Convert annotation table to data frame
annotation_table <- as.data.frame(annotation_table)
#Convert pathway table to data frame
pathway_table <- as.data.frame(pathway_table)
#List Genomes
Genomes <- unique(annotation_table[,genomecol])
load_all('/Users/anttonalberdi/github/DAMMA')
present=c("1.1.1.9","2.7.1.17")
definition=("1.1.1.9 2.7.1.17 1.2.1.26")
compute_MCI(definition,present)
#Decompose definition
def_decomp <- unlist(strsplit(definition, "(?=[ ( ),+]+)", perl=TRUE))
def_decomp
def_level <- set_levels(def_decomp)
def_level
def_table <- create_step_matrix(def_decomp,def_level)
def_table
levels <- colnames(def_table[,c(3:ncol(def_table))])
levels
olnames(def_table[,c(3:ncol(def_table))])
colnames(def_table[,c(3:ncol(def_table))])
def_table[,c(3:ncol(def_table))]
colnames(def_table)c(3:ncol(def_table))
colnames(def_table)[c(3:ncol(def_table))]
load_all('/Users/anttonalberdi/github/DAMMA')
compute_MCI(definition,present)
setwd("/Users/anttonalberdi/github/functional_diversity/")
library(devtools)
library(data.table)
#Load local DAMMA
load_all('/Users/anttonalberdi/github/DAMMA')
#Load annotations
gene_annotations <- fread("data/annotations1.tsv")
#Run distillation
MCI_table <- damma(gene_annotations,pathway_table_FD7,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(MCI_table,file="MCI_table1.Rdata")
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table)
MCI_table_compounds <- damma_compounds(MCI_table,pathway_table_FD7)
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(MCI_table_compounds)
colnames(compounds_table_df) <- c("MAGs","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
#Plot heatmap
ggplot(compounds_table_df2, aes(x=MAGs, y=Compounds, fill=MCI, group=Function))+
geom_tile()+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
head(MCI_table)
head(MCI_table_compounds)
#Prepare input table
compounds_table_df <- melt(MCI_table_compounds)
colnames(compounds_table_df) <- c("MAGs","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table_FD7,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
#Plot heatmap
ggplot(compounds_table_df2, aes(x=MAGs, y=Compounds, fill=MCI, group=Function))+
geom_tile()+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
definition="1.1.1.27"
present="1.1.1.27"
compute_MCI(definition,present)
def_decomp <- unlist(strsplit(definition, "(?=[ ( ),+]+)", perl=TRUE))
def_decomp
def_level <- set_levels(def_decomp)
def_level
def_table <- create_step_matrix(def_decomp,def_level)
def_table
levels <- colnames(def_table)[c(3:ncol(def_table))]
levels
definition <- distillate_definition(definition, def_table, level, present)
level=levels[1]
distillate_definition(definition, def_table, level, present)
definition
def_table
level
present
def_table$clusters
def_table
def_table$clusters <- 0
def_table_sub <- def_table[complete.cases(def_table[,level]),]
def_table_sub
clusters <- unique(def_table_sub$clusters)
clusters
c=clusters
subdef <- def_table_sub[def_table_sub$clusters == c,"def_decomp"]
subdef
subdef2 <- subdef
subdef2[subdef2=="FALSE"] <- 0
subdef2[subdef2=="TRUE"] <- 1
subdef2
value=round(max(as.numeric(subdef2)),1)
subdef2[grepl("_", subdef2, fixed = TRUE) | grepl("[A-Z]", subdef2, fixed = FALSE)] <- subdef2[grepl("_", subdef2, fixed = TRUE) | grepl("[A-Z]", subdef2, fixed = FALSE)] %in% c(present)
subdef2
present
subdef2 <- subdef[subdef != ","]
subdef2[grepl("_", subdef2, fixed = TRUE) | grepl("[A-Z]", subdef2, fixed = FALSE)] <- subdef2[grepl("_", subdef2, fixed = TRUE) | grepl("[A-Z]", subdef2, fixed = FALSE)] %in% c(present)
subdef2
subdef2[grepl("_", subdef2, fixed = TRUE) | grepl("[A-Z]", subdef2, fixed = FALSE)]
load_all('/Users/anttonalberdi/github/DAMMA')
compute_MCI(definition,present)
compute_MCI(definition,present="")
load_all('/Users/anttonalberdi/github/DAMMA')
MCI_expression_table <- damma_expression(gene_expression,gene_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
load_all('/Users/anttonalberdi/github/DAMMA')
MCI_expression_table <- damma_expression(gene_expression,gene_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
head(MCI_expression_table)
load_all('/Users/anttonalberdi/github/DAMMA')
MCI_expression_table <- damma_expression(gene_expression,gene_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
head(expression_table)
expression_table <- gene_expression
compute_MCI_expression(definition,expression_table)
MCI_expression_table <- damma_expression(gene_expression,gene_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
MCI_expression_table
load_all('/Users/anttonalberdi/github/DAMMA')
MCI_expression_table <- damma_expression(gene_expression,gene_annotations,pathway_table,genecol=1,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
#Filter and convert to data frame
annotation_table <- as.data.frame(annotation_table[annotation_table[,genecol] %in% rownames(expression_table),])
expression_table <- as.data.frame(expression_table[rownames(expression_table) %in% unique(annotation_table[,genecol]),])
#Merge annotations and expression information
annotation_expression_table <- merge(annotation_table,expression_table,by.x=genecol,by.y="row.names",all=FALSE)
#List Genomes
Genomes <- unique(annotation_expression_table[,genomecol])
#Declare index (column numbers) of the expression data
expression_index <- grep(paste(colnames(expression_table),collapse="|"), colnames(annotation_expression_table))
def_table_list
head(gene_annotations)
head(gene_expression)
