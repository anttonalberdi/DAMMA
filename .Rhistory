if(i == length(def_decomp)){
unit <- gsub(" ","",unit)
def_decomp2 <- c(def_decomp2,unit)
}
}
return(def_decomp2)
}
decompose_definition(definition)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(devtools)
install_github("anttonalberdi/DAMMA")
present=c("K00169","K03737","K01007")
definition="K01580 (K13524,K07250,K00823,K16871) (K00135,K00139,K17761)"
compute_fullness(present,definition)
library(DAMMA)
present=c("K00169","K03737","K01007")
definition="K01580 (K13524,K07250,K00823,K16871) (K00135,K00139,K17761)"
compute_fullness(present,definition)
present=c("K00169","K03737","K01007")
definition="K01580 (K13524,K07250,K00823,K16871) (K00135,K00139,K17761)"
compute_fullness(present,definition)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
present=c("K00169","K03737","K01007")
definition="K01580 (K13524,K07250,K00823,K16871) (K00135,K00139,K17761)"
compute_fullness(present,definition)
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
present=c("K00169","K03737","K01007")
definition="K01580 (K13524,K07250,K00823,K16871) (K00135,K00139,K17761)"
compute_fullness(definition,present)
present=c("K01580","K03737","K01007")
definition="K01580 (K13524,K07250,K00823,K16871) (K00135,K00139,K17761)"
compute_fullness(definition,present)
annotations_file="/Users/anttonalberdi/annotations.tsv"
functions_file="/Users/anttonalberdi/github/DAMMA/functions/DAMMA_functions_20220619.tsv"
annotations <- fread(annotations_file)
functions <- read.table(functions_file,header=TRUE,row.names=1,sep="\t")
distilled_table <- fullness_matrix(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
distilled_table[is.na(distilled_table)] <- 0
library(data.table)
annotations_file="/Users/anttonalberdi/annotations.tsv"
functions_file="/Users/anttonalberdi/github/DAMMA/functions/DAMMA_functions_20220619.tsv"
annotations <- fread(annotations_file)
functions <- read.table(functions_file,header=TRUE,row.names=1,sep="\t")
distilled_table <- fullness_matrix(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
roxygen2::roxygenise()
roxygen2::roxygenise()
function_table <- read.table("/Users/anttonalberdi/github/DAMMA/data/DAMMA_functions_20220619.tsv", header=TRUE)
function_table <- read.table("/Users/anttonalberdi/github/DAMMA/data/DAMMA_functions_20220619.tsv", header=TRUE, sep="\t")
head(function_table)
save(function_table, file="data/function_table.RData")
roxygen2::roxygenise()
library(devtools)
install_github("anttonalberdi/DAMMA")
roxygen2::roxygenise()
library(devtools)
install_github("anttonalberdi/DAMMA")
roxygen2::roxygenise()
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
data(function_table)
function_table
head(function_table)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
head(annotations)
head(annotations[grepl("bin_m1.cct123",annotations_file$fasta),])
head(annotations[grepl("bin_m1.cct123",annotations_file[,2]),])
grepl("bin_m1.cct123",annotations_file[,2])
head(annotations_file[,2])
head(annotations[grepl("bin_m1.cct123",annotations[,2]),])
tail(annotations)
annotations2 <- annotations[(annotations[,2] == "bin_m1.cct123") | (annotations[,2] == "bin_m9.vmb60"),]
annotations2 <- annotations[(annotations[,2] == "bin_m1.cct123"),]
annotations2 <- annotations[fasta == "bin_m1.cct123") | fasta == "bin_m9.vmb60"),]
annotations2 <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
data(function_table)
functions <- function_table
distilled_table <- fullness_matrix(annotations2,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
distilled_table <- damma(annotations2,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
magcol=2
keggcol=9
eccol=c(10,19)
pepcol=12
annotations2 <- annotations[,c(magcol,keggcol,eccol,pepcol), with=FALSE]
colnames(annotations2) <- c("MAGs",paste0("K",c(1:length(keggcol))),paste0("E",c(1:length(eccol))),paste0("P",c(1:length(pepcol))))
#List MAGs
MAGs <- unique(dplyr::pull(annotations2, MAGs))
#Calculate fullness values
fullness_table <- c()
cat("Calculating fulness values for MAG:\n")
m=0
for(MAG in MAGs){
m=m+1
cat("\t",MAG," (",m,"/",length(MAGs),")\n", sep = "")
#Fetch MAG annotations
annotations_MAG <- annotations2[annotations2$MAGs == MAG]
#K00000
kegg <- str_extract(annotations_MAG$K1, "K[0-9]+")
kegg <- unique(kegg[!is.na(kegg)])
#[EC:0.0.0.0]
EC <- unlist(str_match_all(annotations_MAG$E1, "(?<=\\[EC:).+?(?=\\])"))
EC <- unique(unlist(strsplit(EC, " ")))
EC <- EC[!grepl("-", EC, fixed = TRUE)]
#(EC 0.0.0.0)
EC2 <- unlist(str_match_all(annotations_MAG$E2, "(?<=\\(EC ).+?(?=\\))"))
EC2 <- unique(unlist(strsplit(EC2, " ")))
EC2 <- EC2[!grepl("-", EC2, fixed = TRUE)]
#Peptidases
pep <- unique(annotations_MAG$P1)
pep <- pep[pep != ""]
#Concatenate all annotations
present <- unique(c(kegg,EC,EC2,pep))
#Compute completeness scores
fullness_vector <- c()
for(f in c(1:nrow(functions))){
definition=functions[f,4]
fullness <- compute_fullness(present,definition)
fullness_vector <- c(fullness_vector,fullness)
}
fullness_table <- rbind(fullness_table,fullness_vector)
}
functions
nrow(functions)
head(functions)
functions[1,4]
#Calculate fullness values
fullness_table <- c()
cat("Calculating fulness values for MAG:\n")
m=0
for(MAG in MAGs){
m=m+1
cat("\t",MAG," (",m,"/",length(MAGs),")\n", sep = "")
#Fetch MAG annotations
annotations_MAG <- annotations2[annotations2$MAGs == MAG]
#K00000
kegg <- str_extract(annotations_MAG$K1, "K[0-9]+")
kegg <- unique(kegg[!is.na(kegg)])
#[EC:0.0.0.0]
EC <- unlist(str_match_all(annotations_MAG$E1, "(?<=\\[EC:).+?(?=\\])"))
EC <- unique(unlist(strsplit(EC, " ")))
EC <- EC[!grepl("-", EC, fixed = TRUE)]
#(EC 0.0.0.0)
EC2 <- unlist(str_match_all(annotations_MAG$E2, "(?<=\\(EC ).+?(?=\\))"))
EC2 <- unique(unlist(strsplit(EC2, " ")))
EC2 <- EC2[!grepl("-", EC2, fixed = TRUE)]
#Peptidases
pep <- unique(annotations_MAG$P1)
pep <- pep[pep != ""]
#Concatenate all annotations
present <- unique(c(kegg,EC,EC2,pep))
#Compute completeness scores
fullness_vector <- c()
for(f in c(1:nrow(functions))){
definition=functions[f,5]
fullness <- compute_fullness(present,definition)
fullness_vector <- c(fullness_vector,fullness)
}
fullness_table <- rbind(fullness_table,fullness_vector)
}
functions[f,5]
MAGs <- unique(dplyr::pull(annotations2, MAGs))
#Calculate fullness values
fullness_table <- c()
cat("Calculating fulness values for MAG:\n")
m=0
for(MAG in MAGs){
m=m+1
cat("\t",MAG," (",m,"/",length(MAGs),")\n", sep = "")
#Fetch MAG annotations
annotations_MAG <- annotations2[annotations2$MAGs == MAG]
#K00000
kegg <- str_extract(annotations_MAG$K1, "K[0-9]+")
kegg <- unique(kegg[!is.na(kegg)])
#[EC:0.0.0.0]
EC <- unlist(str_match_all(annotations_MAG$E1, "(?<=\\[EC:).+?(?=\\])"))
EC <- unique(unlist(strsplit(EC, " ")))
EC <- EC[!grepl("-", EC, fixed = TRUE)]
#(EC 0.0.0.0)
EC2 <- unlist(str_match_all(annotations_MAG$E2, "(?<=\\(EC ).+?(?=\\))"))
EC2 <- unique(unlist(strsplit(EC2, " ")))
EC2 <- EC2[!grepl("-", EC2, fixed = TRUE)]
#Peptidases
pep <- unique(annotations_MAG$P1)
pep <- pep[pep != ""]
#Concatenate all annotations
present <- unique(c(kegg,EC,EC2,pep))
#Compute completeness scores
fullness_vector <- c()
for(f in c(1:nrow(functions))){
definition=functions[f,5]
fullness <- compute_fullness(definition,present)
fullness_vector <- c(fullness_vector,fullness)
}
fullness_table <- rbind(fullness_table,fullness_vector)
}
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
damma2 <- function(annotations,functions,magcol,keggcol,eccol,pepcol){
#Simplify annotations table
annotations2 <- annotations[,c(magcol,keggcol,eccol,pepcol), with=FALSE]
colnames(annotations2) <- c("MAGs",paste0("K",c(1:length(keggcol))),paste0("E",c(1:length(eccol))),paste0("P",c(1:length(pepcol))))
#annotations2[ , Annotations := do.call(paste, c(.SD, sep = " ")), .SDcols=-1]
#annotations2 <- annotations2[, .(MAGs, Annotations)]
#List MAGs
MAGs <- unique(dplyr::pull(annotations2, MAGs))
#Calculate fullness values
fullness_table <- c()
cat("Calculating fulness values for MAG:\n")
m=0
for(MAG in MAGs){
m=m+1
cat("\t",MAG," (",m,"/",length(MAGs),")\n", sep = "")
#Fetch MAG annotations
annotations_MAG <- annotations2[annotations2$MAGs == MAG]
#K00000
kegg <- str_extract(annotations_MAG$K1, "K[0-9]+")
kegg <- unique(kegg[!is.na(kegg)])
#[EC:0.0.0.0]
EC <- unlist(str_match_all(annotations_MAG$E1, "(?<=\\[EC:).+?(?=\\])"))
EC <- unique(unlist(strsplit(EC, " ")))
EC <- EC[!grepl("-", EC, fixed = TRUE)]
#(EC 0.0.0.0)
EC2 <- unlist(str_match_all(annotations_MAG$E2, "(?<=\\(EC ).+?(?=\\))"))
EC2 <- unique(unlist(strsplit(EC2, " ")))
EC2 <- EC2[!grepl("-", EC2, fixed = TRUE)]
#Peptidases
pep <- unique(annotations_MAG$P1)
pep <- pep[pep != ""]
#Concatenate all annotations
present <- unique(c(kegg,EC,EC2,pep))
#Compute completeness scores
fullness_vector <- c()
for(f in c(1:nrow(functions))){
cat("1\n")
definition=functions[f,5]
cat("2\n")
fullness <- compute_fullness(definition,present)
cat("3\n")
fullness_vector <- c(fullness_vector,fullness)
}
fullness_table <- rbind(fullness_table,fullness_vector)
}
rownames(fullness_table) <- MAGs
colnames(fullness_table) <- rownames(functions)
return(fullness_table)
}
distilled_table <- damma2(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
library(devtools)
install_github("anttonalberdi/DAMMA")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
roxygen2::roxygenise()
library(devtools)
install_github("anttonalberdi/DAMMA")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
annotations
library(devtools)
install_github("anttonalberdi/DAMMA")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
library(devtools)
install_github("anttonalberdi/DAMMA")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
library(devtools)
install_github("anttonalberdi/DAMMA")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
damma2 <- function(annotations,functions,magcol,keggcol,eccol,pepcol){
#Simplify annotations table
setDT(annotations)
annotations2 <- annotations[,c(magcol,keggcol,eccol,pepcol), with=FALSE]
colnames(annotations2) <- c("MAGs",paste0("K",c(1:length(keggcol))),paste0("E",c(1:length(eccol))),paste0("P",c(1:length(pepcol))))
#List MAGs
MAGs <- unique(dplyr::pull(annotations2, MAGs))
#Calculate fullness values
fullness_table <- c()
cat("Calculating fulness values for MAG:\n")
m=0
for(MAG in MAGs){
m=m+1
cat("\t",MAG," (",m,"/",length(MAGs),")\n", sep = "")
#Fetch MAG annotations
annotations_MAG <- annotations2[annotations2$MAGs == MAG]
#K00000
kegg <- str_extract(annotations_MAG$K1, "K[0-9]+")
kegg <- unique(kegg[!is.na(kegg)])
#[EC:0.0.0.0]
EC <- unlist(str_match_all(annotations_MAG$E1, "(?<=\\[EC:).+?(?=\\])"))
EC <- unique(unlist(strsplit(EC, " ")))
EC <- EC[!grepl("-", EC, fixed = TRUE)]
#(EC 0.0.0.0)
EC2 <- unlist(str_match_all(annotations_MAG$E2, "(?<=\\(EC ).+?(?=\\))"))
EC2 <- unique(unlist(strsplit(EC2, " ")))
EC2 <- EC2[!grepl("-", EC2, fixed = TRUE)]
#Peptidases
pep <- unique(annotations_MAG$P1)
pep <- pep[pep != ""]
#Concatenate all annotations
present <- unique(c(kegg,EC,EC2,pep))
#Compute completeness scores
fullness_vector <- c()
for(f in c(1:nrow(functions))){
definition=functions[f,5]
fullness <- compute_fullness(definition,present)
fullness_vector <- c(fullness_vector,fullness)
}
fullness_table <- rbind(fullness_table,fullness_vector)
}
rownames(fullness_table) <- MAGs
colnames(fullness_table) <- rownames(functions)
return(fullness_table)
}
distilled_table <- damma2(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
damma
library(DAMMA)
damma
detach("package:DAMMA", unload = TRUE)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
damma
library(DAMMA)
damma
damma
help(damma2 <- function(annotations,functions,magcol,keggcol,eccol,pepcol){
#Simplify annotations table
setDT(annotations)
annotations2 <- annotations[,c(magcol,keggcol,eccol,pepcol), with=FALSE]
colnames(annotations2) <- c("MAGs",paste0("K",c(1:length(keggcol))),paste0("E",c(1:length(eccol))),paste0("P",c(1:length(pepcol))))
#List MAGs
MAGs <- unique(dplyr::pull(annotations2, MAGs))
#Calculate fullness values
fullness_table <- c()
cat("Calculating fulness values for MAG:\n")
m=0
for(MAG in MAGs){
m=m+1
cat("\t",MAG," (",m,"/",length(MAGs),")\n", sep = "")
#Fetch MAG annotations
annotations_MAG <- annotations2[annotations2$MAGs == MAG]
#K00000
kegg <- str_extract(annotations_MAG$K1, "K[0-9]+")
kegg <- unique(kegg[!is.na(kegg)])
#[EC:0.0.0.0]
EC <- unlist(str_match_all(annotations_MAG$E1, "(?<=\\[EC:).+?(?=\\])"))
EC <- unique(unlist(strsplit(EC, " ")))
EC <- EC[!grepl("-", EC, fixed = TRUE)]
#(EC 0.0.0.0)
EC2 <- unlist(str_match_all(annotations_MAG$E2, "(?<=\\(EC ).+?(?=\\))"))
EC2 <- unique(unlist(strsplit(EC2, " ")))
EC2 <- EC2[!grepl("-", EC2, fixed = TRUE)]
#Peptidases
pep <- unique(annotations_MAG$P1)
pep <- pep[pep != ""]
#Concatenate all annotations
present <- unique(c(kegg,EC,EC2,pep))
#Compute completeness scores
fullness_vector <- c()
for(f in c(1:nrow(functions))){
definition=functions[f,5]
fullness <- compute_fullness(definition,present)
fullness_vector <- c(fullness_vector,fullness)
}
fullness_table <- rbind(fullness_table,fullness_vector)
}
rownames(fullness_table) <- MAGs
colnames(fullness_table) <- rownames(functions)
return(fullness_table)
})
roxygen2::roxygenise()
remove.packages("DAMMA")
roxygen2::roxygenise()
roxygen2::roxygenise()
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
annotations_file="/Users/anttonalberdi/annotations.tsv"
annotations <- fread(annotations_file)
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
functions_file="/Users/anttonalberdi/github/DAMMA/data/DAMMA_functions_20220619.tsv"
functions <- read.table(functions_file,header=TRUE,row.names=1,sep="\t")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
compute_fullness.R
compute_fullness
library(DAMMA)
remove.packages("DAMMA")
library(DAMMA)
detach_package(DAMMA)
remove.packages("DAMMA")
install_github("anttonalberdi/DAMMA")
library(DAMMA)
compute_fullness
detach_package(DAMMA)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
compute_fullness
annotations_file="/Users/anttonalberdi/annotations.tsv"
functions_file="/Users/anttonalberdi/github/DAMMA/data/DAMMA_functions_20220619.tsv"
annotations <- fread(annotations_file)
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
functions <- read.table(functions_file,header=TRUE,row.names=1,sep="\t")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
library(data.table)
annotations <- fread(annotations_file)
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
functions <- read.table(functions_file,header=TRUE,row.names=1,sep="\t")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
dim(functions)
head(functions)
class(functions)
detach_package(DAMMA)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
damma
detach_package(DAMMA)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
damma
detach_package(DAMMA)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
damma
detach_package(DAMMA)
remove.packages("DAMMA")
detach_package(DAMMA)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
damma
annotations_file="/Users/anttonalberdi/annotations.tsv"
functions_file="/Users/anttonalberdi/github/DAMMA/data/DAMMA_functions_20220619.tsv"
annotations <- fread(annotations_file)
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
functions <- read.table(functions_file,header=TRUE,row.names=1,sep="\t")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
distilled_table
detach_package(DAMMA)
remove.packages("DAMMA")
ibrary(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
annotations_file="/Users/anttonalberdi/annotations.tsv"
functions_file="/Users/anttonalberdi/github/DAMMA/data/DAMMA_functions_20220619.tsv"
annotations <- fread(annotations_file)
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
functions <- read.table(functions_file,header=TRUE,row.names=1,sep="\t")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
annotations_file="/Users/anttonalberdi/annotations.tsv"
functions_file="/Users/anttonalberdi/github/DAMMA/data/DAMMA_functions_20220619.tsv"
annotations <- fread(annotations_file)
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
functions <- read.table(functions_file,header=TRUE,row.names=1,sep="\t")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
head(distilled_table)
distilled_table[is.na(distilled_table)] <- 0
damma_bin(distilled_table)
detach_package(DAMMA)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
annotations_file="/Users/anttonalberdi/annotations.tsv"
functions_file="/Users/anttonalberdi/github/DAMMA/data/DAMMA_functions_20220619.tsv"
annotations <- fread(annotations_file)
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
functions <- read.table(functions_file,header=TRUE,row.names=1,sep="\t")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
roxygen2::roxygenise()
detach_package(DAMMA)
remove.packages("DAMMA")
