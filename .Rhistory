compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=Fullness, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
head(distilled_ileum_corrected_compounds)
compounds_table_df <- melt(distilled_ileum_corrected_compounds)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
compounds_table_df <- melt(distilled_caecum_corrected_compounds1)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
distilled_caecum_corrected_compounds1 <- distilled_caecum_corrected_compounds[c(1:165),]
distilled_caecum_corrected_compounds2 <- distilled_caecum_corrected_compounds[c(166:330),]
distilled_caecum_corrected_compounds3 <- distilled_caecum_corrected_compounds[c(331:495),]
distilled_caecum_corrected_compounds4 <- distilled_caecum_corrected_compounds[c(496:660),]
distilled_caecum_corrected_compounds5 <- distilled_caecum_corrected_compounds[c(661:825),]
compounds_table_df <- melt(distilled_caecum_corrected_compounds1)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
compounds_table_df <- melt(distilled_caecum_corrected_compounds2)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
compounds_table_df <- melt(distilled_caecum_corrected_compounds3)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
compounds_table_df <- melt(distilled_caecum_corrected_compounds4)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
compounds_table_df <- melt(distilled_caecum_corrected_compounds5)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
write.table(distilled_caecum_corrected_compounds,"MCI_compounds_caecum.tsv",row.names=T,col.names=T,sep="\t")
write.table(distilled_ileum_corrected_compounds,"MCI_compounds_ileum.tsv",row.names=T,col.names=T,sep="\t")
write.table(distilled_caecum_corrected_functions,"MCI_functions_caecum.tsv",row.names=T,col.names=T,sep="\t")
write.table(distilled_ileum_corrected_functions,"MCI_functions_ileum.tsv",row.names=T,col.names=T,sep="\t")
load_all('/Users/anttonalberdi/github/DAMMA')
edit(distillate_definition())
annotations_file="annotations_ileum.tsv"
annotations <- fread(annotations_file)
distilled_ileum <- damma(annotations,functions_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_ileum,file="distilled_ileum.RData")
head(annotations)
annotations <- annotations[annotations$fasta == "ERR4647694_bin.1",]
distilled_ileum <- damma(annotations,functions_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
distilled_ileum
annotations_file="annotations_ileum.tsv"
annotations <- fread(annotations_file)
distilled_ileum <- damma(annotations,functions_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_ileum,file="distilled_ileum.RData")
completeness_ileum <- read.csv("checkm_ileum.tsv", header=T, sep="\t")[,c(1,12)]
load("distilled_ileum.RData")
distilled_ileum_corrected <- damma_correction(distilled_ileum,completeness_ileum)
distilled_ileum_corrected_compounds <- damma_compounds(distilled_ileum_corrected,functions_table)
write.table(distilled_ileum_corrected_compounds,"MCI_compounds_ileum.tsv",row.names=T,col.names=T,sep="\t")
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(distilled_ileum_corrected_compounds)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
View(distilled_caecum_corrected_compounds)
subdef <- c("2.3.1.M85"," ","3.1.2.M6")
subdef2 <- subdef[(subdef != " ") & (subdef != "+")]
subdef2
subdef2[grepl("_", subdef2, fixed = TRUE) | grepl("[A-Z]", subdef2, fixed = FALSE)] <- subdef2[grepl("_", subdef2, fixed = TRUE) | grepl("[A-Z]", subdef2, fixed = FALSE)] %in% c(present)
subdef2[grepl("_", subdef2, fixed = TRUE) | grepl("[A-Z]", subdef2, fixed = FALSE)]
#Distillate caecum
annotations_file="annotations_caecum.tsv"
annotations <- fread(annotations_file)
distilled_caecum <- damma(annotations,functions_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_caecum,file="distilled_caecum.RData")
pathway_table_FD1 <- read.table("data/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/DAMMA_db6.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
file="data/damma_data.RData")
pathway_table_FD1 <- read.table("data/source/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/source/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/source/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/source/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/source/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/source/DAMMA_db6.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
file="data/damma_data.RData")
gene_annotations <- read.table("data/source/gene_annotations.tsv",header=TRUE,sep="\t")
gene_expression <- read.table("data/source/gene_expression.tsv",header=TRUE,sep="\t")
genome_counts <- read.table("data/source/genome_counts.tsv",header=TRUE,sep="\t")
genome_quality <- read.table("data/source/genome_quality.tsv",header=TRUE,sep="\t")
pathway_table_FD1 <- read.table("data/source/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/source/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/source/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/source/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/source/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/source/DAMMA_db6.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
file="data/damma_data.RData")
detach_package(DAMMA)
remove.packages("DAMMA")
load_all('/Users/anttonalberdi/github/DAMMA')
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
setwd("/Users/anttonalberdi/github/holofood_damma/")
library(data.table)
library(DAMMA)
######
# Generate pathway-level MCIs
######
#Distillate ileum
annotations_file="annotations_ileum.tsv"
annotations <- fread(annotations_file)
distilled_ileum <- damma(annotations,functions_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_ileum,file="distilled_ileum.RData")
annotations_file="annotations_ileum.tsv"
annotations <- fread(annotations_file)
distilled_ileum <- damma(annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_ileum,file="distilled_ileum.RData")
completeness_ileum <- read.csv("checkm_ileum.tsv", header=T, sep="\t")[,c(1,12)]
load("distilled_ileum.RData")
distilled_ileum_corrected <- damma_correction(distilled_ileum,completeness_ileum)
distilled_ileum_corrected_compounds <- damma_compounds(distilled_ileum_corrected,functions_table)
write.table(distilled_ileum_corrected_compounds,"MCI_compounds_ileum.tsv",row.names=T,col.names=T,sep="\t")
distilled_ileum_corrected_compounds <- damma_compounds(distilled_ileum_corrected,pathway_table)
write.table(distilled_ileum_corrected_compounds,"MCI_compounds_ileum.tsv",row.names=T,col.names=T,sep="\t")
distilled_ileum_corrected_compounds <- damma_compounds(distilled_ileum_corrected,pathway_table)
write.table(distilled_ileum_corrected_compounds,"MCI_compounds_ileum.tsv",row.names=T,col.names=T,sep="\t")
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(distilled_ileum_corrected_compounds)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,functions_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
Prepare input table
compounds_table_df <- melt(distilled_ileum_corrected_compounds)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
gene_annotations <- read.table("data/source/gene_annotations.tsv",header=TRUE,sep="\t")
gene_expression <- read.table("data/source/gene_expression.tsv",header=TRUE,sep="\t")
genome_counts <- read.table("data/source/genome_counts.tsv",header=TRUE,sep="\t")
genome_quality <- read.table("data/source/genome_quality.tsv",header=TRUE,sep="\t")
pathway_table_FD1 <- read.table("data/source/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/source/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/source/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/source/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/source/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/source/DAMMA_db6.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
file="data/damma_data.RData")
gene_annotations <- read.table("data/source/gene_annotations.tsv",header=TRUE,sep="\t")
gene_expression <- read.table("data/source/gene_expression.tsv",header=TRUE,sep="\t")
genome_counts <- read.table("data/source/genome_counts.tsv",header=TRUE,sep="\t")
genome_quality <- read.table("data/source/genome_quality.tsv",header=TRUE,sep="\t")
pathway_table_FD1 <- read.table("data/source/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/source/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/source/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/source/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/source/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/source/DAMMA_db6.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
file="data/damma_data.RData")
setwd("/Users/anttonalberdi/github/holofood_damma/")
library(data.table)
library(DAMMA)
######
# Generate pathway-level MCIs
######
#Distillate ileum
annotations_file="annotations_ileum.tsv"
annotations <- fread(annotations_file)
distilled_ileum <- damma(annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_ileum,file="distilled_ileum.RData")
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
pathway_table
annotations_file="annotations_ileum.tsv"
annotations <- fread(annotations_file)
distilled_ileum <- damma(annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_ileum,file="distilled_ileum.RData")
completeness_ileum <- read.csv("checkm_ileum.tsv", header=T, sep="\t")[,c(1,12)]
load("distilled_ileum.RData")
distilled_ileum_corrected <- damma_correction(distilled_ileum,completeness_ileum)
distilled_ileum_corrected_compounds <- damma_compounds(distilled_ileum_corrected,pathway_table)
write.table(distilled_ileum_corrected_compounds,"MCI_compounds_ileum.tsv",row.names=T,col.names=T,sep="\t")
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(distilled_ileum_corrected_compounds)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
gene_annotations <- read.table("data/source/gene_annotations.tsv",header=TRUE,sep="\t")
gene_expression <- read.table("data/source/gene_expression.tsv",header=TRUE,sep="\t")
genome_counts <- read.table("data/source/genome_counts.tsv",header=TRUE,sep="\t")
genome_quality <- read.table("data/source/genome_quality.tsv",header=TRUE,sep="\t")
pathway_table_FD1 <- read.table("data/source/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/source/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/source/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/source/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/source/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/source/DAMMA_db6.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
file="data/damma_data.RData")
gene_annotations <- read.table("data/source/gene_annotations.tsv",header=TRUE,sep="\t")
gene_expression <- read.table("data/source/gene_expression.tsv",header=TRUE,sep="\t")
genome_counts <- read.table("data/source/genome_counts.tsv",header=TRUE,sep="\t")
genome_quality <- read.table("data/source/genome_quality.tsv",header=TRUE,sep="\t")
pathway_table_FD1 <- read.table("data/source/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/source/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/source/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/source/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/source/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/source/DAMMA_db6.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
file="data/damma_data.RData")
load_all('/Users/anttonalberdi/github/DAMMA')
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
pathway_table
setwd("/Users/anttonalberdi/github/holofood_damma/")
library(data.table)
library(DAMMA)
######
# Generate pathway-level MCIs
######
#Distillate ileum
annotations_file="annotations_ileum.tsv"
annotations <- fread(annotations_file)
distilled_ileum <- damma(annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_ileum,file="distilled_ileum.RData")
completeness_ileum <- read.csv("checkm_ileum.tsv", header=T, sep="\t")[,c(1,12)]
load("distilled_ileum.RData")
distilled_ileum_corrected <- damma_correction(distilled_ileum,completeness_ileum)
distilled_ileum_corrected_compounds <- damma_compounds(distilled_ileum_corrected,pathway_table)
write.table(distilled_ileum_corrected_compounds,"MCI_compounds_ileum.tsv",row.names=T,col.names=T,sep="\t")
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(distilled_ileum_corrected_compounds)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
gene_annotations <- read.table("data/source/gene_annotations.tsv",header=TRUE,sep="\t")
gene_expression <- read.table("data/source/gene_expression.tsv",header=TRUE,sep="\t")
genome_counts <- read.table("data/source/genome_counts.tsv",header=TRUE,sep="\t")
genome_quality <- read.table("data/source/genome_quality.tsv",header=TRUE,sep="\t")
pathway_table_FD1 <- read.table("data/source/DAMMA_db1.tsv",header=TRUE,sep="\t")
pathway_table_FD2 <- read.table("data/source/DAMMA_db2.tsv",header=TRUE,sep="\t")
pathway_table_FD3 <- read.table("data/source/DAMMA_db3.tsv",header=TRUE,sep="\t")
pathway_table_FD4 <- read.table("data/source/DAMMA_db4.tsv",header=TRUE,sep="\t")
pathway_table_FD5 <- read.table("data/source/DAMMA_db5.tsv",header=TRUE,sep="\t")
pathway_table_FD6 <- read.table("data/source/DAMMA_db6.tsv",header=TRUE,sep="\t")
#Use latest version as default
pathway_table <- pathway_table_FD6
save(pathway_table,gene_annotations,gene_expression,genome_counts,genome_quality,
pathway_table_FD1,
pathway_table_FD2,
pathway_table_FD3,
pathway_table_FD4,
pathway_table_FD5,
pathway_table_FD6,
file="data/damma_data.RData")
library(devtools)
load_all('/Users/anttonalberdi/github/DAMMA')
pathway_table
setwd("/Users/anttonalberdi/github/holofood_damma/")
library(data.table)
library(DAMMA)
######
# Generate pathway-level MCIs
######
#Distillate ileum
annotations_file="annotations_ileum.tsv"
annotations <- fread(annotations_file)
distilled_ileum <- damma(annotations,pathway_table,genomecol=2,keggcol=9,eccol=c(10,19),pepcol=12)
save(distilled_ileum,file="distilled_ileum.RData")
completeness_ileum <- read.csv("checkm_ileum.tsv", header=T, sep="\t")[,c(1,12)]
load("distilled_ileum.RData")
distilled_ileum_corrected <- damma_correction(distilled_ileum,completeness_ileum)
distilled_ileum_corrected_compounds <- damma_compounds(distilled_ileum_corrected,pathway_table)
write.table(distilled_ileum_corrected_compounds,"MCI_compounds_ileum.tsv",row.names=T,col.names=T,sep="\t")
library(data.table)
library(ggplot2)
library(RColorBrewer)
#Prepare input table
compounds_table_df <- melt(distilled_ileum_corrected_compounds)
colnames(compounds_table_df) <- c("Genomes","Compounds","MCI")
compounds_table_df2 <- merge(compounds_table_df,pathway_table,by.x="Compounds",by.y="Compound")
compounds_table_df2$Function <- as.factor(compounds_table_df2$Function)
compounds_table_df2$Function <- factor(compounds_table_df2$Function, levels=c("Polysaccharide degradation","Sugar degradation","Lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
#Plot heatmap
ggplot(compounds_table_df2, aes(x=Genomes, y=Compounds, fill=MCI, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn(limits = c(0,1), colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(limits = c(0,1), colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
