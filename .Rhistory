remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
damma
annotations_file="/Users/anttonalberdi/annotations.tsv"
functions_file="/Users/anttonalberdi/github/DAMMA/data/DAMMA_functions_20220619.tsv"
annotations <- fread(annotations_file)
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
functions <- read.table(functions_file,header=TRUE,row.names=1,sep="\t")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
distilled_table
detach_package(DAMMA)
remove.packages("DAMMA")
ibrary(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
annotations_file="/Users/anttonalberdi/annotations.tsv"
functions_file="/Users/anttonalberdi/github/DAMMA/data/DAMMA_functions_20220619.tsv"
annotations <- fread(annotations_file)
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
functions <- read.table(functions_file,header=TRUE,row.names=1,sep="\t")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
annotations_file="/Users/anttonalberdi/annotations.tsv"
functions_file="/Users/anttonalberdi/github/DAMMA/data/DAMMA_functions_20220619.tsv"
annotations <- fread(annotations_file)
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
functions <- read.table(functions_file,header=TRUE,row.names=1,sep="\t")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
head(distilled_table)
distilled_table[is.na(distilled_table)] <- 0
damma_bin(distilled_table)
detach_package(DAMMA)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
annotations_file="/Users/anttonalberdi/annotations.tsv"
functions_file="/Users/anttonalberdi/github/DAMMA/data/DAMMA_functions_20220619.tsv"
annotations <- fread(annotations_file)
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
functions <- read.table(functions_file,header=TRUE,row.names=1,sep="\t")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
roxygen2::roxygenise()
detach_package(DAMMA)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
annotations_file="/Users/anttonalberdi/annotations.tsv"
functions_file="/Users/anttonalberdi/github/DAMMA/data/DAMMA_functions_20220619.tsv"
annotations <- fread(annotations_file)
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
functions <- read.table(functions_file,header=TRUE,row.names=1,sep="\t")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
annotations_file="/Users/anttonalberdi/annotations.tsv"
functions_file="/Users/anttonalberdi/github/DAMMA/data/DAMMA_functions_20220619.tsv"
annotations <- fread(annotations_file)
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
functions <- read.table(functions_file,header=TRUE,row.names=1,sep="\t")
distilled_table <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
distilled_table
completeness <- read.csv("/Users/anttonalberdi/genomeInfo.csv",row.names=1)
head(completeness)
completeness <- read.csv("/Users/anttonalberdi/genomeInfo.csv")
head(completeness)
damma_bin(distilled_table,0.9,completeness[,c(1:2)])
nrow(distilled_table)
completeness <- completeness[rownames(completeness) %in% rownames(distilled_table),]
nrow(completeness)
present=c("K01580","K03737","K01007")
definition="K01580 (K13524,K07250,K00823,K16871) (K00135,K00139,K17761)"
compute_fullness(definition,present)
present=c("K01580","K07250","K01007")
definition="K01580 (K13524,K07250,K00823,K16871) (K00135,K00139,K17761)"
compute_fullness(definition,present)
Â©
present=c("K01580","K07250","K00823")
definition="K01580 (K13524,K07250,K00823,K16871) (K00135,K00139,K17761)"
compute_fullness(definition,present)
present=c("K01580","K07250","K17761")
definition="K01580 (K13524,K07250,K00823,K16871) (K00135,K00139,K17761)"
compute_fullness(definition,present)
present=c("K01580","K07250","K17761")
definition="K01580 ((K13524,K07250) (K00823,K16871)) (K00135,K00139,K17761)"
compute_fullness(definition,present)
setwd("/Users/anttonalberdi/github/holofood_damma/")
library(data.table)
library(DAMMA)
annotations_file="annotations_ileum.tsv"
annotations <- fread(annotations_file)
data(function_table)
functions <- function_table
distilled_caecum <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
#Load functions
data(function_table)
functions <- function_table
#Distillate ileum
annotations_file="annotations_ileum.tsv"
annotations <- fread(annotations_file)
distilled_ileum <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
#Distillate caecum
annotations_file="annotations_caecum.tsv"
annotations <- fread(annotations_file)
distilled_caecum <- damma(annotations,functions,magcol=2,keggcol=9,eccol=c(10,19),pepcol=12)
distilled_table2=distilled_ileum
distilled_table2=distilled_table_binary_corrected
distilled_table2[is.na(distilled_table2)] <- 0
distilled_df <- melt(distilled_table2)
colnames(distilled_df) <- c("MAGs","Functions","Fullness")
distilled_df2 <- merge(distilled_df,functions,by.x="Functions",by.y="row.names")
ggplot(distilled_df2, aes(x=Functions, y=MAGs, fill=Fullness, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn( colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(colours=brewer.pal(7, "YlGnBu"))+
facet_grid(~ Function, scales = "free", space = "free")
theme_grey(base_size=8)
distilled_table2=distilled_ileum
distilled_table2[is.na(distilled_table2)] <- 0
distilled_df <- melt(distilled_table2)
colnames(distilled_df) <- c("MAGs","Functions","Fullness")
distilled_df2 <- merge(distilled_df,functions,by.x="Functions",by.y="row.names")
ggplot(distilled_df2, aes(x=Functions, y=MAGs, fill=Fullness, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn( colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(colours=brewer.pal(7, "YlGnBu"))+
facet_grid(~ Function, scales = "free", space = "free")
theme_grey(base_size=8)
library(ggplot2)
library(RColorBrewer)
distilled_table2[is.na(distilled_table2)] <- 0
distilled_df <- melt(distilled_table2)
colnames(distilled_df) <- c("MAGs","Functions","Fullness")
distilled_df2 <- merge(distilled_df,functions,by.x="Functions",by.y="row.names")
ggplot(distilled_df2, aes(x=Functions, y=MAGs, fill=Fullness, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn( colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(colours=brewer.pal(7, "YlGnBu"))+
facet_grid(~ Function, scales = "free", space = "free")
theme_grey(base_size=8)
distilled_table2= distilled_ileum
distilled_table2[is.na(distilled_table2)] <- 0
distilled_df <- melt(distilled_table2)
colnames(distilled_df) <- c("MAGs","Functions","Fullness")
distilled_df2 <- merge(distilled_df,functions,by.x="Functions",by.y="row.names")
#Aggregate compounds
distilled_df3 <- aggregate(distilled_df2$Fullness, by=list(distilled_df2$MAGs, distilled_df2$Compound),FUN=sum)
colnames(distilled_df3) <- c("MAGs","Compounds","Fullness")
distilled_df3$Fullness[distilled_df3$Fullness > 1] <- 1
distilled_df3 <- merge(distilled_df3,unique(functions[,c(1,3)]),by.x="Compounds",by.y="Compound")
distilled_df3$Function <- as.factor(distilled_df3$Function)
distilled_df3$Function <- factor(distilled_df3$Function, levels=c("Dietary carbohydrate degradation","Dietary lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
ggplot(distilled_df3, aes(x=MAGs, y=Compounds, fill=Fullness, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn( colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
distilled_table2=distilled_ileum
distilled_table2[is.na(distilled_table2)] <- 0
distilled_df <- melt(distilled_table2)
colnames(distilled_df) <- c("MAGs","Functions","Fullness")
distilled_df2 <- merge(distilled_df,functions,by.x="Functions",by.y="row.names")
distilled_df3 <- aggregate(distilled_df2$Fullness, by=list(distilled_df2$MAGs, distilled_df2$Compound),FUN=sum)
colnames(distilled_df3) <- c("MAGs","Compounds","Fullness")
distilled_df3$Fullness[distilled_df3$Fullness > 1] <- 1
distilled_df3 <- merge(distilled_df3,unique(functions[,c(1,3)]),by.x="Compounds",by.y="Compound")
distilled_df3$Function <- as.factor(distilled_df3$Function)
HEAD(distilled_df3)
head(distilled_df3)
head(functions)
distilled_df3 <- merge(distilled_df3,unique(functions[,c(1,3)]),by.x="Compounds",by.y="Compound")
head(unique(functions[,c(1,3)]))
distilled_df3 <- merge(distilled_df3,unique(functions[,c(2,4)]),by.x="Compounds",by.y="Compound")
head(distilled_df3)
distilled_df3$Function <- as.factor(distilled_df3$Function)
distilled_df3$Function <- factor(distilled_df3$Function, levels=c("Dietary carbohydrate degradation","Dietary lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
ggplot(distilled_df3, aes(x=MAGs, y=Compounds, fill=Fullness, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn( colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
distilled_table2= distilled_caecum
distilled_table2[is.na(distilled_table2)] <- 0
distilled_df <- melt(distilled_table2)
colnames(distilled_df) <- c("MAGs","Functions","Fullness")
distilled_df2 <- merge(distilled_df,functions,by.x="Functions",by.y="row.names")
#Aggregate compounds
distilled_df3 <- aggregate(distilled_df2$Fullness, by=list(distilled_df2$MAGs, distilled_df2$Compound),FUN=sum)
colnames(distilled_df3) <- c("MAGs","Compounds","Fullness")
distilled_df3$Fullness[distilled_df3$Fullness > 1] <- 1
distilled_df3 <- merge(distilled_df3,unique(functions[,c(2,4)]),by.x="Compounds",by.y="Compound")
distilled_df3$Function <- as.factor(distilled_df3$Function)
distilled_df3$Function <- factor(distilled_df3$Function, levels=c("Dietary carbohydrate degradation","Dietary lipid degradation","Protein degradation","Mucin degradation","SCFA production","Organic anion production","Secondary bile acid production","Amino acid production","Amino acid derivative production","Vitamin production"))
ggplot(distilled_df3, aes(x=MAGs, y=Compounds, fill=Fullness, group=Function))+
geom_tile(colour="white", size=0.1)+
scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+
#scale_fill_gradientn( colours = rev(c("#781a25","#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#ddf1da","#f1faf0","#f4f4f4")))+
scale_fill_gradientn(colours=brewer.pal(7, "YlGnBu"))+
facet_grid(Function ~ ., scales = "free", space = "free")+
theme_grey(base_size=8)+
theme(strip.text.y = element_text(angle = 0),axis.text.x=element_blank())
save(distilled_ileum,file="distilled_ileum.RData")
save(distilled_caecum,file="distilled_caecum.RData")
head(functions)
codes <- functions[functions$Function == "Dietary carbohydrate degradation","Code"]
codes
functions[functions$Function == "Dietary lipid degradation","Code"]
functions[functions$Function == "Protein degradation","Code"]
functions[functions$Function == "Mucin degradation","Code"]
functions[functions$Function == "SCFA production","Code"]
functions[functions$Function == "Organic anion production","Code"]
functions[functions$Function == "Secondary bile acid production","Code"]
functions[functions$Function == "Amino acid production","Code"]
functions[functions$Function == "Amino acid derivative production","Code"]
functions[functions$Function == "Vitamin production","Code"]
distilled_ileum -> distilled_table
head(distilled_table)
head(distilled_ileum)
head(distilled_caecum)
head(functions)
colnames(distilled_table) <- paste0("F",colnames(distilled_table))
colnames(distilled_table)
head(distilled_table)
distilled_table_sub <- distilled_table[,codes]
head(distilled_table_sub)
codes
compounds <- functions[functions$Function == "Dietary carbohydrate degradation","Compound"]
compounds
colnames(distilled_table_sub) <- compounds
head(distilled_table_sub)
codes <- functions[functions$Function == "Dietary lipid degradation","Code"]
head(codes)
codes <- functions[functions$Function == "Protein degradation","Code"]
enzyme_groups <- functions[functions$Function == "Protein degradation","Compound"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_sub
rowMeans(distilled_table_sub)
distilled_table_sub <- distilled_table[,codes]
distilled_table_sub <- rowMeans(distilled_table_sub)
distilled_table_sub <- t(t(distilled_table_sub))
head(distilled_table_sub)
#Create empty table
aggregated_table <- c()
#Aggregate dietary carbohydrates
codes <- functions[functions$Function == "Dietary carbohydrate degradation","Code"]
compounds <- functions[functions$Function == "Dietary carbohydrate degradation","Compound"]
distilled_table_sub <- distilled_table[,codes]
colnames(distilled_table_sub) <- compounds
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate dietary lipids
codes <- functions[functions$Function == "Dietary lipid degradation","Code"]
compounds <- functions[functions$Function == "Dietary lipid degradation","Compound"]
distilled_table_sub <- distilled_table[,codes]
colnames(distilled_table_sub) <- compounds
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate dietary proteins
codes <- functions[functions$Function == "Protein degradation","Code"]
enzyme_groups <- functions[functions$Function == "Protein degradation","Compound"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_sub <- rowMeans(distilled_table_sub)
distilled_table_sub <- t(t(distilled_table_sub))
colnames(distilled_table_sub) <- "Peptides"
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
head(aggregated_table)
codes <- functions[functions$Function == "SCFA production","Code"]
compounds <- functions[functions$Function == "SCFA production","Compound"]
distilled_table_sub <- distilled_table[,codes]
head(distilled_table_sub)
head(functions)
distilled_table_sub <- distilled_table[,codes]
distilled_table_agg <- t(merge(t(distilled_table_sub),functions[functions$Function == "SCFA production",c("Code","Function")],by.x="row.names",by.y="Code",FUN=max))
head(distilled_table_agg)
distilled_table_mer <- merge(t(distilled_table_sub),functions[functions$Function == "SCFA production",c("Code","Function")],by.x="row.names",by.y="Code")
head(distilled_table_mer)
distilled_table_mer <- merge(t(distilled_table_sub),functions[functions$Function == "SCFA production",c("Code","Compound")],by.x="row.names",by.y="Code")
head(distilled_table_mer)
aggregate(distilled_table_mer[,-ncol(distilled_table_mer)],by=list(distilled_table_mer$Compound),FUN=max)
distilled_table_mer <- merge(t(distilled_table_sub),functions[functions$Function == "SCFA production",c("Code","Compound")],by.x="row.names",by.y="Code")
head(distilled_table_mer)
distilled_table_agg <- aggregate(subset(distilled_table_mer, select = -c(Row.names,Compound) ),by=list(distilled_table_mer$Compound),FUN=max)
head(distilled_table_agg)
rownames(distilled_table_agg) <- distilled_table_agg[,1]
distilled_table_agg <- distilled_table_agg[,-1]
head(distilled_table_agg)
distilled_table_sub <- distilled_table[,codes]
distilled_table_mer <- merge(t(distilled_table_sub),functions[functions$Function == "SCFA production",c("Code","Compound")],by.x="row.names",by.y="Code")
distilled_table_agg <- aggregate(subset(distilled_table_mer, select = -c(Row.names,Compound) ),by=list(distilled_table_mer$Compound),FUN=max)
rownames(distilled_table_agg) <- distilled_table_agg[,1]
distilled_table_agg <- t(distilled_table_agg[,-1])
head(distilled_table_agg)
codes <- functions[functions$Function == "Organic anion production","Code"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_mer <- merge(t(distilled_table_sub),functions[functions$Function == "Organic anion production",c("Code","Compound")],by.x="row.names",by.y="Code")
distilled_table_agg <- aggregate(subset(distilled_table_mer, select = -c(Row.names,Compound) ),by=list(distilled_table_mer$Compound),FUN=max)
rownames(distilled_table_agg) <- distilled_table_agg[,1]
distilled_table_agg <- t(distilled_table_agg[,-1])
head(distilled_table_agg)
#Create empty table
aggregated_table <- c()
#Aggregate dietary carbohydrates
codes <- functions[functions$Function == "Dietary carbohydrate degradation","Code"]
compounds <- functions[functions$Function == "Dietary carbohydrate degradation","Compound"]
distilled_table_sub <- distilled_table[,codes]
colnames(distilled_table_sub) <- compounds
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate dietary lipids
codes <- functions[functions$Function == "Dietary lipid degradation","Code"]
compounds <- functions[functions$Function == "Dietary lipid degradation","Compound"]
distilled_table_sub <- distilled_table[,codes]
colnames(distilled_table_sub) <- compounds
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate dietary proteins
codes <- functions[functions$Function == "Protein degradation","Code"]
enzyme_groups <- functions[functions$Function == "Protein degradation","Compound"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_sub <- rowMeans(distilled_table_sub)
distilled_table_sub <- t(t(distilled_table_sub))
colnames(distilled_table_sub) <- "Peptides"
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate mucins
codes <- functions[functions$Function == "Mucin degradation","Code"]
compounds <- functions[functions$Function == "Mucin degradation","Compound"]
distilled_table_sub <- distilled_table[,codes]
colnames(distilled_table_sub) <- compounds
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate SCFAs
codes <- functions[functions$Function == "SCFA production","Code"]
compounds <- functions[functions$Function == "SCFA production","Compound"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_mer <- merge(t(distilled_table_sub),functions[functions$Function == "SCFA production",c("Code","Compound")],by.x="row.names",by.y="Code")
distilled_table_agg <- aggregate(subset(distilled_table_mer, select = -c(Row.names,Compound) ),by=list(distilled_table_mer$Compound),FUN=max)
rownames(distilled_table_agg) <- distilled_table_agg[,1]
distilled_table_agg <- t(distilled_table_agg[,-1])
aggregated_table <- cbind(aggregated_table,distilled_table_agg)
#Aggregate organic anions
codes <- functions[functions$Function == "Organic anion production","Code"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_mer <- merge(t(distilled_table_sub),functions[functions$Function == "Organic anion production",c("Code","Compound")],by.x="row.names",by.y="Code")
distilled_table_agg <- aggregate(subset(distilled_table_mer, select = -c(Row.names,Compound) ),by=list(distilled_table_mer$Compound),FUN=max)
rownames(distilled_table_agg) <- distilled_table_agg[,1]
distilled_table_agg <- t(distilled_table_agg[,-1])
aggregated_table <- cbind(aggregated_table,distilled_table_agg)
#Aggregate secondary bile acids
codes <- functions[functions$Function == "Secondary bile acid production","Code"]
compounds <- functions[functions$Function == "Secondary bile acid degradation","Compound"]
distilled_table_sub <- distilled_table[,codes]
colnames(distilled_table_sub) <- compounds
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate amino acids
codes <- functions[functions$Function == "Amino acid production","Code"]
compounds <- functions[functions$Function == "Amino acid production","Compound"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_mer <- merge(t(distilled_table_sub),functions[functions$Function == "Amino acid production",c("Code","Compound")],by.x="row.names",by.y="Code")
distilled_table_agg <- aggregate(subset(distilled_table_mer, select = -c(Row.names,Compound) ),by=list(distilled_table_mer$Compound),FUN=max)
rownames(distilled_table_agg) <- distilled_table_agg[,1]
distilled_table_agg <- t(distilled_table_agg[,-1])
aggregated_table <- cbind(aggregated_table,distilled_table_agg)
#Aggregate amino acid derivatives
codes <- functions[functions$Function == "Amino acid derivative production","Code"]
compounds <- functions[functions$Function == "Amino acid derivative production","Compound"]
distilled_table_sub <- distilled_table[,codes]
colnames(distilled_table_sub) <- compounds
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate vitamins
codes <- functions[functions$Function == "Vitamin production","Code"]
compounds <- functions[functions$Function == "Vitamin production","Compound"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_mer <- merge(t(distilled_table_sub),functions[functions$Function == "Vitamin production",c("Code","Compound")],by.x="row.names",by.y="Code")
distilled_table_agg <- aggregate(subset(distilled_table_mer, select = -c(Row.names,Compound) ),by=list(distilled_table_mer$Compound),FUN=max)
rownames(distilled_table_agg) <- distilled_table_agg[,1]
distilled_table_agg <- t(distilled_table_agg[,-1])
aggregated_table <- cbind(aggregated_table,distilled_table_agg)
head(aggregated_table)
codes <- functions[functions$Function == "Secondary bile acid production","Code"]
compounds <- functions[functions$Function == "Secondary bile acid degradation","Compound"]
compounds
codes
functions[functions$Function == "Secondary bile acid production",]
#Create empty table
aggregated_table <- c()
#Aggregate dietary carbohydrates
codes <- functions[functions$Function == "Dietary carbohydrate degradation","Code"]
compounds <- functions[functions$Function == "Dietary carbohydrate degradation","Compound"]
distilled_table_sub <- distilled_table[,codes]
colnames(distilled_table_sub) <- compounds
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate dietary lipids
codes <- functions[functions$Function == "Dietary lipid degradation","Code"]
compounds <- functions[functions$Function == "Dietary lipid degradation","Compound"]
distilled_table_sub <- distilled_table[,codes]
colnames(distilled_table_sub) <- compounds
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate dietary proteins
codes <- functions[functions$Function == "Protein degradation","Code"]
enzyme_groups <- functions[functions$Function == "Protein degradation","Compound"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_sub <- rowMeans(distilled_table_sub)
distilled_table_sub <- t(t(distilled_table_sub))
colnames(distilled_table_sub) <- "Peptides"
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate mucins
codes <- functions[functions$Function == "Mucin degradation","Code"]
compounds <- functions[functions$Function == "Mucin degradation","Compound"]
distilled_table_sub <- distilled_table[,codes]
colnames(distilled_table_sub) <- compounds
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate SCFAs
codes <- functions[functions$Function == "SCFA production","Code"]
compounds <- functions[functions$Function == "SCFA production","Compound"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_mer <- merge(t(distilled_table_sub),functions[functions$Function == "SCFA production",c("Code","Compound")],by.x="row.names",by.y="Code")
distilled_table_agg <- aggregate(subset(distilled_table_mer, select = -c(Row.names,Compound) ),by=list(distilled_table_mer$Compound),FUN=max)
rownames(distilled_table_agg) <- distilled_table_agg[,1]
distilled_table_agg <- t(distilled_table_agg[,-1])
aggregated_table <- cbind(aggregated_table,distilled_table_agg)
#Aggregate organic anions
codes <- functions[functions$Function == "Organic anion production","Code"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_mer <- merge(t(distilled_table_sub),functions[functions$Function == "Organic anion production",c("Code","Compound")],by.x="row.names",by.y="Code")
distilled_table_agg <- aggregate(subset(distilled_table_mer, select = -c(Row.names,Compound) ),by=list(distilled_table_mer$Compound),FUN=max)
rownames(distilled_table_agg) <- distilled_table_agg[,1]
distilled_table_agg <- t(distilled_table_agg[,-1])
aggregated_table <- cbind(aggregated_table,distilled_table_agg)
#Aggregate secondary bile acids
codes <- functions[functions$Function == "Secondary bile acid production","Code"]
compounds <- functions[functions$Function == "Secondary bile acid production","Compound"]
distilled_table_sub <- distilled_table[,codes]
colnames(distilled_table_sub) <- compounds
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate amino acids
codes <- functions[functions$Function == "Amino acid production","Code"]
compounds <- functions[functions$Function == "Amino acid production","Compound"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_mer <- merge(t(distilled_table_sub),functions[functions$Function == "Amino acid production",c("Code","Compound")],by.x="row.names",by.y="Code")
distilled_table_agg <- aggregate(subset(distilled_table_mer, select = -c(Row.names,Compound) ),by=list(distilled_table_mer$Compound),FUN=max)
rownames(distilled_table_agg) <- distilled_table_agg[,1]
distilled_table_agg <- t(distilled_table_agg[,-1])
aggregated_table <- cbind(aggregated_table,distilled_table_agg)
#Aggregate amino acid derivatives
codes <- functions[functions$Function == "Amino acid derivative production","Code"]
compounds <- functions[functions$Function == "Amino acid derivative production","Compound"]
distilled_table_sub <- distilled_table[,codes]
colnames(distilled_table_sub) <- compounds
aggregated_table <- cbind(aggregated_table,distilled_table_sub)
#Aggregate vitamins
codes <- functions[functions$Function == "Vitamin production","Code"]
compounds <- functions[functions$Function == "Vitamin production","Compound"]
distilled_table_sub <- distilled_table[,codes]
distilled_table_mer <- merge(t(distilled_table_sub),functions[functions$Function == "Vitamin production",c("Code","Compound")],by.x="row.names",by.y="Code")
distilled_table_agg <- aggregate(subset(distilled_table_mer, select = -c(Row.names,Compound) ),by=list(distilled_table_mer$Compound),FUN=max)
rownames(distilled_table_agg) <- distilled_table_agg[,1]
distilled_table_agg <- t(distilled_table_agg[,-1])
aggregated_table <- cbind(aggregated_table,distilled_table_agg)
colnames(aggregated_table)
roxygen2::roxygenise()
roxygen2::roxygenise()
detach_package(DAMMA)
remove.packages("DAMMA")
library(devtools)
install_github("anttonalberdi/DAMMA")
library(DAMMA)
library(data.table)
load("distilled_caecum.RData")
annotations_file="/Users/anttonalberdi/annotations.tsv"
unique(annotations_file$fasta)
unique(annotations_file[,2])
annotations <- fread(annotations_file)
annotations <- annotations[(fasta == "bin_m1.cct123") | (fasta == "bin_m9.vmb60"),]
save(annotations,file="data/annotations_example.RData")
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
